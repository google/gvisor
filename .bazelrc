# Copyright 2019 The gVisor Authors.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# RBE requires a strong hash function, such as SHA256.
startup --host_jvm_args=-Dbazel.DigestFunction=SHA256

# Build with C++17.
build --cxxopt=-std=c++17

# Display the current git revision in the info block.
build --stamp --workspace_status_command tools/workspace_status.sh

# Enable remote execution so actions are performed on the remote systems.
build:remote --remote_executor=grpcs://remotebuildexecution.googleapis.com
build:remote --bes_backend=buildeventservice.googleapis.com
build:remote --bes_results_url="https://source.cloud.google.com/results/invocations"
build:remote --bes_timeout=600s
build:remote --project_id=gvisor-rbe
build:remote --remote_instance_name=projects/gvisor-rbe/instances/default_instance
build:remote3 --remote_executor=grpcs://remotebuildexecution.googleapis.com
build:remote3 --project_id=gvisor-rbe
build:remote3 --bes_backend=buildeventservice.googleapis.com
build:remote3 --bes_results_url="https://source.cloud.google.com/results/invocations"
build:remote3 --bes_timeout=600s
build:remote3 --remote_instance_name=projects/gvisor-rbe/instances/default_instance

# Enable authentication. This will pick up application default credentials by
# default. You can use --google_credentials=some_file.json to use a service
# account credential instead.
build:remote --google_default_credentials=true
build:remote --auth_scope="https://www.googleapis.com/auth/cloud-source-tools"
build:remote3 --google_default_credentials=true
build:remote3 --auth_scope="https://www.googleapis.com/auth/cloud-source-tools"

# Add a custom platform and toolchain that builds in a privileged docker
# container, which is required by our syscall tests.
build:remote --host_platform=//tools/bazeldefs:rbe_ubuntu1604
build:remote --extra_toolchains=//tools/bazeldefs:cc-toolchain-clang-x86_64-default
build:remote --extra_execution_platforms=//tools/bazeldefs:rbe_ubuntu1604
build:remote --platforms=//tools/bazeldefs:rbe_ubuntu1604
build:remote --crosstool_top=@rbe_default//cc:toolchain
build:remote --jobs=100
build:remote --remote_timeout=3600
build:remote3 --host_platform=//tools/bazeldefs:rbe_ubuntu1604_bazel3
build:remote3 --extra_toolchains=//tools/bazeldefs:cc-toolchain-clang-x86_64-default_bazel3
build:remote3 --extra_execution_platforms=//tools/bazeldefs:rbe_ubuntu1604_bazel3
build:remote3 --platforms=//tools/bazeldefs:rbe_ubuntu1604_bazel3
build:remote3 --crosstool_top=@rbe_default//cc:toolchain
build:remote3 --jobs=100
build:remote3 --remote_timeout=3600

# Set flags for uploading to BES in order to view results in the Bazel Build
# Results UI.
build:results --bes_backend="buildeventservice.googleapis.com"
build:results --bes_timeout=60s
build:results --tls_enabled

# Output BES results url
build:results --bes_results_url="https://source.cloud.google.com/results/invocations/"

# Set flags for uploading to BES without Remote Build Execution.
build:results-local --bes_backend="buildeventservice.googleapis.com"
build:results-local --bes_timeout=60s
build:results-local --tls_enabled=true
build:results-local --auth_enabled=true
build:results-local --spawn_strategy=local
build:results-local --remote_cache=remotebuildexecution.googleapis.com
build:results-local --remote_timeout=3600
build:results-local --bes_results_url="https://source.cloud.google.com/results/invocations/"
