// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.8
// 	protoc        v6.31.1
// source: pkg/sentry/seccheck/points/syscall.proto

package points_go_proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Exit struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Result        int64                  `protobuf:"varint,1,opt,name=result,proto3" json:"result,omitempty"`
	Errorno       int64                  `protobuf:"varint,2,opt,name=errorno,proto3" json:"errorno,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Exit) Reset() {
	*x = Exit{}
	mi := &file_pkg_sentry_seccheck_points_syscall_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Exit) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Exit) ProtoMessage() {}

func (x *Exit) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_sentry_seccheck_points_syscall_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Exit.ProtoReflect.Descriptor instead.
func (*Exit) Descriptor() ([]byte, []int) {
	return file_pkg_sentry_seccheck_points_syscall_proto_rawDescGZIP(), []int{0}
}

func (x *Exit) GetResult() int64 {
	if x != nil {
		return x.Result
	}
	return 0
}

func (x *Exit) GetErrorno() int64 {
	if x != nil {
		return x.Errorno
	}
	return 0
}

type Syscall struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ContextData   *ContextData           `protobuf:"bytes,1,opt,name=context_data,json=contextData,proto3" json:"context_data,omitempty"`
	Exit          *Exit                  `protobuf:"bytes,2,opt,name=exit,proto3" json:"exit,omitempty"`
	Sysno         uint64                 `protobuf:"varint,4,opt,name=sysno,proto3" json:"sysno,omitempty"`
	Arg1          uint64                 `protobuf:"varint,5,opt,name=arg1,proto3" json:"arg1,omitempty"`
	Arg2          uint64                 `protobuf:"varint,6,opt,name=arg2,proto3" json:"arg2,omitempty"`
	Arg3          uint64                 `protobuf:"varint,7,opt,name=arg3,proto3" json:"arg3,omitempty"`
	Arg4          uint64                 `protobuf:"varint,8,opt,name=arg4,proto3" json:"arg4,omitempty"`
	Arg5          uint64                 `protobuf:"varint,9,opt,name=arg5,proto3" json:"arg5,omitempty"`
	Arg6          uint64                 `protobuf:"varint,10,opt,name=arg6,proto3" json:"arg6,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Syscall) Reset() {
	*x = Syscall{}
	mi := &file_pkg_sentry_seccheck_points_syscall_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Syscall) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Syscall) ProtoMessage() {}

func (x *Syscall) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_sentry_seccheck_points_syscall_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Syscall.ProtoReflect.Descriptor instead.
func (*Syscall) Descriptor() ([]byte, []int) {
	return file_pkg_sentry_seccheck_points_syscall_proto_rawDescGZIP(), []int{1}
}

func (x *Syscall) GetContextData() *ContextData {
	if x != nil {
		return x.ContextData
	}
	return nil
}

func (x *Syscall) GetExit() *Exit {
	if x != nil {
		return x.Exit
	}
	return nil
}

func (x *Syscall) GetSysno() uint64 {
	if x != nil {
		return x.Sysno
	}
	return 0
}

func (x *Syscall) GetArg1() uint64 {
	if x != nil {
		return x.Arg1
	}
	return 0
}

func (x *Syscall) GetArg2() uint64 {
	if x != nil {
		return x.Arg2
	}
	return 0
}

func (x *Syscall) GetArg3() uint64 {
	if x != nil {
		return x.Arg3
	}
	return 0
}

func (x *Syscall) GetArg4() uint64 {
	if x != nil {
		return x.Arg4
	}
	return 0
}

func (x *Syscall) GetArg5() uint64 {
	if x != nil {
		return x.Arg5
	}
	return 0
}

func (x *Syscall) GetArg6() uint64 {
	if x != nil {
		return x.Arg6
	}
	return 0
}

type Open struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ContextData   *ContextData           `protobuf:"bytes,1,opt,name=context_data,json=contextData,proto3" json:"context_data,omitempty"`
	Exit          *Exit                  `protobuf:"bytes,2,opt,name=exit,proto3" json:"exit,omitempty"`
	Sysno         uint64                 `protobuf:"varint,3,opt,name=sysno,proto3" json:"sysno,omitempty"`
	Fd            int64                  `protobuf:"varint,4,opt,name=fd,proto3" json:"fd,omitempty"`
	FdPath        string                 `protobuf:"bytes,5,opt,name=fd_path,json=fdPath,proto3" json:"fd_path,omitempty"`
	Pathname      string                 `protobuf:"bytes,6,opt,name=pathname,proto3" json:"pathname,omitempty"`
	Flags         uint32                 `protobuf:"varint,7,opt,name=flags,proto3" json:"flags,omitempty"`
	Mode          uint32                 `protobuf:"varint,8,opt,name=mode,proto3" json:"mode,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Open) Reset() {
	*x = Open{}
	mi := &file_pkg_sentry_seccheck_points_syscall_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Open) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Open) ProtoMessage() {}

func (x *Open) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_sentry_seccheck_points_syscall_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Open.ProtoReflect.Descriptor instead.
func (*Open) Descriptor() ([]byte, []int) {
	return file_pkg_sentry_seccheck_points_syscall_proto_rawDescGZIP(), []int{2}
}

func (x *Open) GetContextData() *ContextData {
	if x != nil {
		return x.ContextData
	}
	return nil
}

func (x *Open) GetExit() *Exit {
	if x != nil {
		return x.Exit
	}
	return nil
}

func (x *Open) GetSysno() uint64 {
	if x != nil {
		return x.Sysno
	}
	return 0
}

func (x *Open) GetFd() int64 {
	if x != nil {
		return x.Fd
	}
	return 0
}

func (x *Open) GetFdPath() string {
	if x != nil {
		return x.FdPath
	}
	return ""
}

func (x *Open) GetPathname() string {
	if x != nil {
		return x.Pathname
	}
	return ""
}

func (x *Open) GetFlags() uint32 {
	if x != nil {
		return x.Flags
	}
	return 0
}

func (x *Open) GetMode() uint32 {
	if x != nil {
		return x.Mode
	}
	return 0
}

type Close struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ContextData   *ContextData           `protobuf:"bytes,1,opt,name=context_data,json=contextData,proto3" json:"context_data,omitempty"`
	Exit          *Exit                  `protobuf:"bytes,2,opt,name=exit,proto3" json:"exit,omitempty"`
	Sysno         uint64                 `protobuf:"varint,3,opt,name=sysno,proto3" json:"sysno,omitempty"`
	Fd            int64                  `protobuf:"varint,4,opt,name=fd,proto3" json:"fd,omitempty"`
	FdPath        string                 `protobuf:"bytes,5,opt,name=fd_path,json=fdPath,proto3" json:"fd_path,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Close) Reset() {
	*x = Close{}
	mi := &file_pkg_sentry_seccheck_points_syscall_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Close) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Close) ProtoMessage() {}

func (x *Close) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_sentry_seccheck_points_syscall_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Close.ProtoReflect.Descriptor instead.
func (*Close) Descriptor() ([]byte, []int) {
	return file_pkg_sentry_seccheck_points_syscall_proto_rawDescGZIP(), []int{3}
}

func (x *Close) GetContextData() *ContextData {
	if x != nil {
		return x.ContextData
	}
	return nil
}

func (x *Close) GetExit() *Exit {
	if x != nil {
		return x.Exit
	}
	return nil
}

func (x *Close) GetSysno() uint64 {
	if x != nil {
		return x.Sysno
	}
	return 0
}

func (x *Close) GetFd() int64 {
	if x != nil {
		return x.Fd
	}
	return 0
}

func (x *Close) GetFdPath() string {
	if x != nil {
		return x.FdPath
	}
	return ""
}

type Read struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ContextData   *ContextData           `protobuf:"bytes,1,opt,name=context_data,json=contextData,proto3" json:"context_data,omitempty"`
	Exit          *Exit                  `protobuf:"bytes,2,opt,name=exit,proto3" json:"exit,omitempty"`
	Sysno         uint64                 `protobuf:"varint,3,opt,name=sysno,proto3" json:"sysno,omitempty"`
	Fd            int64                  `protobuf:"varint,4,opt,name=fd,proto3" json:"fd,omitempty"`
	FdPath        string                 `protobuf:"bytes,5,opt,name=fd_path,json=fdPath,proto3" json:"fd_path,omitempty"`
	Count         uint64                 `protobuf:"varint,6,opt,name=count,proto3" json:"count,omitempty"`
	HasOffset     bool                   `protobuf:"varint,7,opt,name=has_offset,json=hasOffset,proto3" json:"has_offset,omitempty"`
	Offset        int64                  `protobuf:"varint,8,opt,name=offset,proto3" json:"offset,omitempty"`
	Flags         uint32                 `protobuf:"varint,9,opt,name=flags,proto3" json:"flags,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Read) Reset() {
	*x = Read{}
	mi := &file_pkg_sentry_seccheck_points_syscall_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Read) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Read) ProtoMessage() {}

func (x *Read) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_sentry_seccheck_points_syscall_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Read.ProtoReflect.Descriptor instead.
func (*Read) Descriptor() ([]byte, []int) {
	return file_pkg_sentry_seccheck_points_syscall_proto_rawDescGZIP(), []int{4}
}

func (x *Read) GetContextData() *ContextData {
	if x != nil {
		return x.ContextData
	}
	return nil
}

func (x *Read) GetExit() *Exit {
	if x != nil {
		return x.Exit
	}
	return nil
}

func (x *Read) GetSysno() uint64 {
	if x != nil {
		return x.Sysno
	}
	return 0
}

func (x *Read) GetFd() int64 {
	if x != nil {
		return x.Fd
	}
	return 0
}

func (x *Read) GetFdPath() string {
	if x != nil {
		return x.FdPath
	}
	return ""
}

func (x *Read) GetCount() uint64 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *Read) GetHasOffset() bool {
	if x != nil {
		return x.HasOffset
	}
	return false
}

func (x *Read) GetOffset() int64 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *Read) GetFlags() uint32 {
	if x != nil {
		return x.Flags
	}
	return 0
}

type Write struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ContextData   *ContextData           `protobuf:"bytes,1,opt,name=context_data,json=contextData,proto3" json:"context_data,omitempty"`
	Exit          *Exit                  `protobuf:"bytes,2,opt,name=exit,proto3" json:"exit,omitempty"`
	Sysno         uint64                 `protobuf:"varint,3,opt,name=sysno,proto3" json:"sysno,omitempty"`
	Fd            int64                  `protobuf:"varint,4,opt,name=fd,proto3" json:"fd,omitempty"`
	FdPath        string                 `protobuf:"bytes,5,opt,name=fd_path,json=fdPath,proto3" json:"fd_path,omitempty"`
	Count         uint64                 `protobuf:"varint,6,opt,name=count,proto3" json:"count,omitempty"`
	HasOffset     bool                   `protobuf:"varint,7,opt,name=has_offset,json=hasOffset,proto3" json:"has_offset,omitempty"`
	Offset        int64                  `protobuf:"varint,8,opt,name=offset,proto3" json:"offset,omitempty"`
	Flags         uint32                 `protobuf:"varint,9,opt,name=flags,proto3" json:"flags,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Write) Reset() {
	*x = Write{}
	mi := &file_pkg_sentry_seccheck_points_syscall_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Write) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Write) ProtoMessage() {}

func (x *Write) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_sentry_seccheck_points_syscall_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Write.ProtoReflect.Descriptor instead.
func (*Write) Descriptor() ([]byte, []int) {
	return file_pkg_sentry_seccheck_points_syscall_proto_rawDescGZIP(), []int{5}
}

func (x *Write) GetContextData() *ContextData {
	if x != nil {
		return x.ContextData
	}
	return nil
}

func (x *Write) GetExit() *Exit {
	if x != nil {
		return x.Exit
	}
	return nil
}

func (x *Write) GetSysno() uint64 {
	if x != nil {
		return x.Sysno
	}
	return 0
}

func (x *Write) GetFd() int64 {
	if x != nil {
		return x.Fd
	}
	return 0
}

func (x *Write) GetFdPath() string {
	if x != nil {
		return x.FdPath
	}
	return ""
}

func (x *Write) GetCount() uint64 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *Write) GetHasOffset() bool {
	if x != nil {
		return x.HasOffset
	}
	return false
}

func (x *Write) GetOffset() int64 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *Write) GetFlags() uint32 {
	if x != nil {
		return x.Flags
	}
	return 0
}

type Connect struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ContextData   *ContextData           `protobuf:"bytes,1,opt,name=context_data,json=contextData,proto3" json:"context_data,omitempty"`
	Exit          *Exit                  `protobuf:"bytes,2,opt,name=exit,proto3" json:"exit,omitempty"`
	Sysno         uint64                 `protobuf:"varint,3,opt,name=sysno,proto3" json:"sysno,omitempty"`
	Fd            int64                  `protobuf:"varint,4,opt,name=fd,proto3" json:"fd,omitempty"`
	FdPath        string                 `protobuf:"bytes,5,opt,name=fd_path,json=fdPath,proto3" json:"fd_path,omitempty"`
	Address       []byte                 `protobuf:"bytes,6,opt,name=address,proto3" json:"address,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Connect) Reset() {
	*x = Connect{}
	mi := &file_pkg_sentry_seccheck_points_syscall_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Connect) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Connect) ProtoMessage() {}

func (x *Connect) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_sentry_seccheck_points_syscall_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Connect.ProtoReflect.Descriptor instead.
func (*Connect) Descriptor() ([]byte, []int) {
	return file_pkg_sentry_seccheck_points_syscall_proto_rawDescGZIP(), []int{6}
}

func (x *Connect) GetContextData() *ContextData {
	if x != nil {
		return x.ContextData
	}
	return nil
}

func (x *Connect) GetExit() *Exit {
	if x != nil {
		return x.Exit
	}
	return nil
}

func (x *Connect) GetSysno() uint64 {
	if x != nil {
		return x.Sysno
	}
	return 0
}

func (x *Connect) GetFd() int64 {
	if x != nil {
		return x.Fd
	}
	return 0
}

func (x *Connect) GetFdPath() string {
	if x != nil {
		return x.FdPath
	}
	return ""
}

func (x *Connect) GetAddress() []byte {
	if x != nil {
		return x.Address
	}
	return nil
}

type Execve struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ContextData   *ContextData           `protobuf:"bytes,1,opt,name=context_data,json=contextData,proto3" json:"context_data,omitempty"`
	Exit          *Exit                  `protobuf:"bytes,2,opt,name=exit,proto3" json:"exit,omitempty"`
	Sysno         uint64                 `protobuf:"varint,3,opt,name=sysno,proto3" json:"sysno,omitempty"`
	Fd            int64                  `protobuf:"varint,4,opt,name=fd,proto3" json:"fd,omitempty"`
	FdPath        string                 `protobuf:"bytes,5,opt,name=fd_path,json=fdPath,proto3" json:"fd_path,omitempty"`
	Pathname      string                 `protobuf:"bytes,6,opt,name=pathname,proto3" json:"pathname,omitempty"`
	Argv          []string               `protobuf:"bytes,7,rep,name=argv,proto3" json:"argv,omitempty"`
	Envv          []string               `protobuf:"bytes,8,rep,name=envv,proto3" json:"envv,omitempty"`
	Flags         uint32                 `protobuf:"varint,9,opt,name=flags,proto3" json:"flags,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Execve) Reset() {
	*x = Execve{}
	mi := &file_pkg_sentry_seccheck_points_syscall_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Execve) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Execve) ProtoMessage() {}

func (x *Execve) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_sentry_seccheck_points_syscall_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Execve.ProtoReflect.Descriptor instead.
func (*Execve) Descriptor() ([]byte, []int) {
	return file_pkg_sentry_seccheck_points_syscall_proto_rawDescGZIP(), []int{7}
}

func (x *Execve) GetContextData() *ContextData {
	if x != nil {
		return x.ContextData
	}
	return nil
}

func (x *Execve) GetExit() *Exit {
	if x != nil {
		return x.Exit
	}
	return nil
}

func (x *Execve) GetSysno() uint64 {
	if x != nil {
		return x.Sysno
	}
	return 0
}

func (x *Execve) GetFd() int64 {
	if x != nil {
		return x.Fd
	}
	return 0
}

func (x *Execve) GetFdPath() string {
	if x != nil {
		return x.FdPath
	}
	return ""
}

func (x *Execve) GetPathname() string {
	if x != nil {
		return x.Pathname
	}
	return ""
}

func (x *Execve) GetArgv() []string {
	if x != nil {
		return x.Argv
	}
	return nil
}

func (x *Execve) GetEnvv() []string {
	if x != nil {
		return x.Envv
	}
	return nil
}

func (x *Execve) GetFlags() uint32 {
	if x != nil {
		return x.Flags
	}
	return 0
}

type Socket struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ContextData   *ContextData           `protobuf:"bytes,1,opt,name=context_data,json=contextData,proto3" json:"context_data,omitempty"`
	Exit          *Exit                  `protobuf:"bytes,2,opt,name=exit,proto3" json:"exit,omitempty"`
	Sysno         uint64                 `protobuf:"varint,3,opt,name=sysno,proto3" json:"sysno,omitempty"`
	Domain        int32                  `protobuf:"varint,4,opt,name=domain,proto3" json:"domain,omitempty"`
	Type          int32                  `protobuf:"varint,5,opt,name=type,proto3" json:"type,omitempty"`
	Protocol      int32                  `protobuf:"varint,6,opt,name=protocol,proto3" json:"protocol,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Socket) Reset() {
	*x = Socket{}
	mi := &file_pkg_sentry_seccheck_points_syscall_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Socket) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Socket) ProtoMessage() {}

func (x *Socket) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_sentry_seccheck_points_syscall_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Socket.ProtoReflect.Descriptor instead.
func (*Socket) Descriptor() ([]byte, []int) {
	return file_pkg_sentry_seccheck_points_syscall_proto_rawDescGZIP(), []int{8}
}

func (x *Socket) GetContextData() *ContextData {
	if x != nil {
		return x.ContextData
	}
	return nil
}

func (x *Socket) GetExit() *Exit {
	if x != nil {
		return x.Exit
	}
	return nil
}

func (x *Socket) GetSysno() uint64 {
	if x != nil {
		return x.Sysno
	}
	return 0
}

func (x *Socket) GetDomain() int32 {
	if x != nil {
		return x.Domain
	}
	return 0
}

func (x *Socket) GetType() int32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *Socket) GetProtocol() int32 {
	if x != nil {
		return x.Protocol
	}
	return 0
}

type Chdir struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ContextData   *ContextData           `protobuf:"bytes,1,opt,name=context_data,json=contextData,proto3" json:"context_data,omitempty"`
	Exit          *Exit                  `protobuf:"bytes,2,opt,name=exit,proto3" json:"exit,omitempty"`
	Sysno         uint64                 `protobuf:"varint,3,opt,name=sysno,proto3" json:"sysno,omitempty"`
	Fd            int64                  `protobuf:"varint,4,opt,name=fd,proto3" json:"fd,omitempty"`
	FdPath        string                 `protobuf:"bytes,5,opt,name=fd_path,json=fdPath,proto3" json:"fd_path,omitempty"`
	Pathname      string                 `protobuf:"bytes,6,opt,name=pathname,proto3" json:"pathname,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Chdir) Reset() {
	*x = Chdir{}
	mi := &file_pkg_sentry_seccheck_points_syscall_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Chdir) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Chdir) ProtoMessage() {}

func (x *Chdir) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_sentry_seccheck_points_syscall_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Chdir.ProtoReflect.Descriptor instead.
func (*Chdir) Descriptor() ([]byte, []int) {
	return file_pkg_sentry_seccheck_points_syscall_proto_rawDescGZIP(), []int{9}
}

func (x *Chdir) GetContextData() *ContextData {
	if x != nil {
		return x.ContextData
	}
	return nil
}

func (x *Chdir) GetExit() *Exit {
	if x != nil {
		return x.Exit
	}
	return nil
}

func (x *Chdir) GetSysno() uint64 {
	if x != nil {
		return x.Sysno
	}
	return 0
}

func (x *Chdir) GetFd() int64 {
	if x != nil {
		return x.Fd
	}
	return 0
}

func (x *Chdir) GetFdPath() string {
	if x != nil {
		return x.FdPath
	}
	return ""
}

func (x *Chdir) GetPathname() string {
	if x != nil {
		return x.Pathname
	}
	return ""
}

type Setresid struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ContextData   *ContextData           `protobuf:"bytes,1,opt,name=context_data,json=contextData,proto3" json:"context_data,omitempty"`
	Exit          *Exit                  `protobuf:"bytes,2,opt,name=exit,proto3" json:"exit,omitempty"`
	Sysno         uint64                 `protobuf:"varint,3,opt,name=sysno,proto3" json:"sysno,omitempty"`
	Rid           uint32                 `protobuf:"varint,4,opt,name=rid,proto3" json:"rid,omitempty"`
	Eid           uint32                 `protobuf:"varint,5,opt,name=eid,proto3" json:"eid,omitempty"`
	Sid           uint32                 `protobuf:"varint,6,opt,name=sid,proto3" json:"sid,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Setresid) Reset() {
	*x = Setresid{}
	mi := &file_pkg_sentry_seccheck_points_syscall_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Setresid) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Setresid) ProtoMessage() {}

func (x *Setresid) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_sentry_seccheck_points_syscall_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Setresid.ProtoReflect.Descriptor instead.
func (*Setresid) Descriptor() ([]byte, []int) {
	return file_pkg_sentry_seccheck_points_syscall_proto_rawDescGZIP(), []int{10}
}

func (x *Setresid) GetContextData() *ContextData {
	if x != nil {
		return x.ContextData
	}
	return nil
}

func (x *Setresid) GetExit() *Exit {
	if x != nil {
		return x.Exit
	}
	return nil
}

func (x *Setresid) GetSysno() uint64 {
	if x != nil {
		return x.Sysno
	}
	return 0
}

func (x *Setresid) GetRid() uint32 {
	if x != nil {
		return x.Rid
	}
	return 0
}

func (x *Setresid) GetEid() uint32 {
	if x != nil {
		return x.Eid
	}
	return 0
}

func (x *Setresid) GetSid() uint32 {
	if x != nil {
		return x.Sid
	}
	return 0
}

type Setid struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ContextData   *ContextData           `protobuf:"bytes,1,opt,name=context_data,json=contextData,proto3" json:"context_data,omitempty"`
	Exit          *Exit                  `protobuf:"bytes,2,opt,name=exit,proto3" json:"exit,omitempty"`
	Sysno         uint64                 `protobuf:"varint,3,opt,name=sysno,proto3" json:"sysno,omitempty"`
	Id            uint32                 `protobuf:"varint,4,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Setid) Reset() {
	*x = Setid{}
	mi := &file_pkg_sentry_seccheck_points_syscall_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Setid) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Setid) ProtoMessage() {}

func (x *Setid) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_sentry_seccheck_points_syscall_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Setid.ProtoReflect.Descriptor instead.
func (*Setid) Descriptor() ([]byte, []int) {
	return file_pkg_sentry_seccheck_points_syscall_proto_rawDescGZIP(), []int{11}
}

func (x *Setid) GetContextData() *ContextData {
	if x != nil {
		return x.ContextData
	}
	return nil
}

func (x *Setid) GetExit() *Exit {
	if x != nil {
		return x.Exit
	}
	return nil
}

func (x *Setid) GetSysno() uint64 {
	if x != nil {
		return x.Sysno
	}
	return 0
}

func (x *Setid) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type StructRlimit struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Cur           uint64                 `protobuf:"varint,1,opt,name=cur,proto3" json:"cur,omitempty"`
	Max           uint64                 `protobuf:"varint,2,opt,name=max,proto3" json:"max,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StructRlimit) Reset() {
	*x = StructRlimit{}
	mi := &file_pkg_sentry_seccheck_points_syscall_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StructRlimit) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StructRlimit) ProtoMessage() {}

func (x *StructRlimit) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_sentry_seccheck_points_syscall_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StructRlimit.ProtoReflect.Descriptor instead.
func (*StructRlimit) Descriptor() ([]byte, []int) {
	return file_pkg_sentry_seccheck_points_syscall_proto_rawDescGZIP(), []int{12}
}

func (x *StructRlimit) GetCur() uint64 {
	if x != nil {
		return x.Cur
	}
	return 0
}

func (x *StructRlimit) GetMax() uint64 {
	if x != nil {
		return x.Max
	}
	return 0
}

type Prlimit struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ContextData   *ContextData           `protobuf:"bytes,1,opt,name=context_data,json=contextData,proto3" json:"context_data,omitempty"`
	Exit          *Exit                  `protobuf:"bytes,2,opt,name=exit,proto3" json:"exit,omitempty"`
	Sysno         uint64                 `protobuf:"varint,3,opt,name=sysno,proto3" json:"sysno,omitempty"`
	Pid           int32                  `protobuf:"varint,4,opt,name=pid,proto3" json:"pid,omitempty"`
	Resource      int64                  `protobuf:"varint,5,opt,name=resource,proto3" json:"resource,omitempty"`
	NewLimit      *StructRlimit          `protobuf:"bytes,6,opt,name=new_limit,json=newLimit,proto3" json:"new_limit,omitempty"`
	OldLimit      *StructRlimit          `protobuf:"bytes,7,opt,name=old_limit,json=oldLimit,proto3" json:"old_limit,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Prlimit) Reset() {
	*x = Prlimit{}
	mi := &file_pkg_sentry_seccheck_points_syscall_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Prlimit) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Prlimit) ProtoMessage() {}

func (x *Prlimit) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_sentry_seccheck_points_syscall_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Prlimit.ProtoReflect.Descriptor instead.
func (*Prlimit) Descriptor() ([]byte, []int) {
	return file_pkg_sentry_seccheck_points_syscall_proto_rawDescGZIP(), []int{13}
}

func (x *Prlimit) GetContextData() *ContextData {
	if x != nil {
		return x.ContextData
	}
	return nil
}

func (x *Prlimit) GetExit() *Exit {
	if x != nil {
		return x.Exit
	}
	return nil
}

func (x *Prlimit) GetSysno() uint64 {
	if x != nil {
		return x.Sysno
	}
	return 0
}

func (x *Prlimit) GetPid() int32 {
	if x != nil {
		return x.Pid
	}
	return 0
}

func (x *Prlimit) GetResource() int64 {
	if x != nil {
		return x.Resource
	}
	return 0
}

func (x *Prlimit) GetNewLimit() *StructRlimit {
	if x != nil {
		return x.NewLimit
	}
	return nil
}

func (x *Prlimit) GetOldLimit() *StructRlimit {
	if x != nil {
		return x.OldLimit
	}
	return nil
}

type Pipe struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ContextData   *ContextData           `protobuf:"bytes,1,opt,name=context_data,json=contextData,proto3" json:"context_data,omitempty"`
	Exit          *Exit                  `protobuf:"bytes,2,opt,name=exit,proto3" json:"exit,omitempty"`
	Sysno         uint64                 `protobuf:"varint,3,opt,name=sysno,proto3" json:"sysno,omitempty"`
	Flags         uint32                 `protobuf:"varint,4,opt,name=flags,proto3" json:"flags,omitempty"`
	Reader        int32                  `protobuf:"varint,5,opt,name=reader,proto3" json:"reader,omitempty"`
	Writer        int32                  `protobuf:"varint,6,opt,name=writer,proto3" json:"writer,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Pipe) Reset() {
	*x = Pipe{}
	mi := &file_pkg_sentry_seccheck_points_syscall_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Pipe) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Pipe) ProtoMessage() {}

func (x *Pipe) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_sentry_seccheck_points_syscall_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Pipe.ProtoReflect.Descriptor instead.
func (*Pipe) Descriptor() ([]byte, []int) {
	return file_pkg_sentry_seccheck_points_syscall_proto_rawDescGZIP(), []int{14}
}

func (x *Pipe) GetContextData() *ContextData {
	if x != nil {
		return x.ContextData
	}
	return nil
}

func (x *Pipe) GetExit() *Exit {
	if x != nil {
		return x.Exit
	}
	return nil
}

func (x *Pipe) GetSysno() uint64 {
	if x != nil {
		return x.Sysno
	}
	return 0
}

func (x *Pipe) GetFlags() uint32 {
	if x != nil {
		return x.Flags
	}
	return 0
}

func (x *Pipe) GetReader() int32 {
	if x != nil {
		return x.Reader
	}
	return 0
}

func (x *Pipe) GetWriter() int32 {
	if x != nil {
		return x.Writer
	}
	return 0
}

type Fcntl struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ContextData   *ContextData           `protobuf:"bytes,1,opt,name=context_data,json=contextData,proto3" json:"context_data,omitempty"`
	Exit          *Exit                  `protobuf:"bytes,2,opt,name=exit,proto3" json:"exit,omitempty"`
	Sysno         uint64                 `protobuf:"varint,3,opt,name=sysno,proto3" json:"sysno,omitempty"`
	Fd            int32                  `protobuf:"varint,4,opt,name=fd,proto3" json:"fd,omitempty"`
	FdPath        string                 `protobuf:"bytes,5,opt,name=fd_path,json=fdPath,proto3" json:"fd_path,omitempty"`
	Cmd           int32                  `protobuf:"varint,6,opt,name=cmd,proto3" json:"cmd,omitempty"`
	Args          int64                  `protobuf:"varint,7,opt,name=args,proto3" json:"args,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Fcntl) Reset() {
	*x = Fcntl{}
	mi := &file_pkg_sentry_seccheck_points_syscall_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Fcntl) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Fcntl) ProtoMessage() {}

func (x *Fcntl) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_sentry_seccheck_points_syscall_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Fcntl.ProtoReflect.Descriptor instead.
func (*Fcntl) Descriptor() ([]byte, []int) {
	return file_pkg_sentry_seccheck_points_syscall_proto_rawDescGZIP(), []int{15}
}

func (x *Fcntl) GetContextData() *ContextData {
	if x != nil {
		return x.ContextData
	}
	return nil
}

func (x *Fcntl) GetExit() *Exit {
	if x != nil {
		return x.Exit
	}
	return nil
}

func (x *Fcntl) GetSysno() uint64 {
	if x != nil {
		return x.Sysno
	}
	return 0
}

func (x *Fcntl) GetFd() int32 {
	if x != nil {
		return x.Fd
	}
	return 0
}

func (x *Fcntl) GetFdPath() string {
	if x != nil {
		return x.FdPath
	}
	return ""
}

func (x *Fcntl) GetCmd() int32 {
	if x != nil {
		return x.Cmd
	}
	return 0
}

func (x *Fcntl) GetArgs() int64 {
	if x != nil {
		return x.Args
	}
	return 0
}

type Dup struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ContextData   *ContextData           `protobuf:"bytes,1,opt,name=context_data,json=contextData,proto3" json:"context_data,omitempty"`
	Exit          *Exit                  `protobuf:"bytes,2,opt,name=exit,proto3" json:"exit,omitempty"`
	Sysno         uint64                 `protobuf:"varint,3,opt,name=sysno,proto3" json:"sysno,omitempty"`
	OldFd         int32                  `protobuf:"varint,4,opt,name=old_fd,json=oldFd,proto3" json:"old_fd,omitempty"`
	NewFd         int32                  `protobuf:"varint,5,opt,name=new_fd,json=newFd,proto3" json:"new_fd,omitempty"`
	FdPath        string                 `protobuf:"bytes,6,opt,name=fd_path,json=fdPath,proto3" json:"fd_path,omitempty"`
	Flags         uint32                 `protobuf:"varint,7,opt,name=flags,proto3" json:"flags,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Dup) Reset() {
	*x = Dup{}
	mi := &file_pkg_sentry_seccheck_points_syscall_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Dup) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Dup) ProtoMessage() {}

func (x *Dup) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_sentry_seccheck_points_syscall_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Dup.ProtoReflect.Descriptor instead.
func (*Dup) Descriptor() ([]byte, []int) {
	return file_pkg_sentry_seccheck_points_syscall_proto_rawDescGZIP(), []int{16}
}

func (x *Dup) GetContextData() *ContextData {
	if x != nil {
		return x.ContextData
	}
	return nil
}

func (x *Dup) GetExit() *Exit {
	if x != nil {
		return x.Exit
	}
	return nil
}

func (x *Dup) GetSysno() uint64 {
	if x != nil {
		return x.Sysno
	}
	return 0
}

func (x *Dup) GetOldFd() int32 {
	if x != nil {
		return x.OldFd
	}
	return 0
}

func (x *Dup) GetNewFd() int32 {
	if x != nil {
		return x.NewFd
	}
	return 0
}

func (x *Dup) GetFdPath() string {
	if x != nil {
		return x.FdPath
	}
	return ""
}

func (x *Dup) GetFlags() uint32 {
	if x != nil {
		return x.Flags
	}
	return 0
}

type Signalfd struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ContextData   *ContextData           `protobuf:"bytes,1,opt,name=context_data,json=contextData,proto3" json:"context_data,omitempty"`
	Exit          *Exit                  `protobuf:"bytes,2,opt,name=exit,proto3" json:"exit,omitempty"`
	Sysno         uint64                 `protobuf:"varint,3,opt,name=sysno,proto3" json:"sysno,omitempty"`
	Fd            int32                  `protobuf:"varint,4,opt,name=fd,proto3" json:"fd,omitempty"`
	FdPath        string                 `protobuf:"bytes,5,opt,name=fd_path,json=fdPath,proto3" json:"fd_path,omitempty"`
	Sigset        uint64                 `protobuf:"varint,6,opt,name=sigset,proto3" json:"sigset,omitempty"`
	Flags         int32                  `protobuf:"varint,7,opt,name=flags,proto3" json:"flags,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Signalfd) Reset() {
	*x = Signalfd{}
	mi := &file_pkg_sentry_seccheck_points_syscall_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Signalfd) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Signalfd) ProtoMessage() {}

func (x *Signalfd) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_sentry_seccheck_points_syscall_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Signalfd.ProtoReflect.Descriptor instead.
func (*Signalfd) Descriptor() ([]byte, []int) {
	return file_pkg_sentry_seccheck_points_syscall_proto_rawDescGZIP(), []int{17}
}

func (x *Signalfd) GetContextData() *ContextData {
	if x != nil {
		return x.ContextData
	}
	return nil
}

func (x *Signalfd) GetExit() *Exit {
	if x != nil {
		return x.Exit
	}
	return nil
}

func (x *Signalfd) GetSysno() uint64 {
	if x != nil {
		return x.Sysno
	}
	return 0
}

func (x *Signalfd) GetFd() int32 {
	if x != nil {
		return x.Fd
	}
	return 0
}

func (x *Signalfd) GetFdPath() string {
	if x != nil {
		return x.FdPath
	}
	return ""
}

func (x *Signalfd) GetSigset() uint64 {
	if x != nil {
		return x.Sigset
	}
	return 0
}

func (x *Signalfd) GetFlags() int32 {
	if x != nil {
		return x.Flags
	}
	return 0
}

type Chroot struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ContextData   *ContextData           `protobuf:"bytes,1,opt,name=context_data,json=contextData,proto3" json:"context_data,omitempty"`
	Exit          *Exit                  `protobuf:"bytes,2,opt,name=exit,proto3" json:"exit,omitempty"`
	Sysno         uint64                 `protobuf:"varint,3,opt,name=sysno,proto3" json:"sysno,omitempty"`
	Pathname      string                 `protobuf:"bytes,4,opt,name=pathname,proto3" json:"pathname,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Chroot) Reset() {
	*x = Chroot{}
	mi := &file_pkg_sentry_seccheck_points_syscall_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Chroot) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Chroot) ProtoMessage() {}

func (x *Chroot) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_sentry_seccheck_points_syscall_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Chroot.ProtoReflect.Descriptor instead.
func (*Chroot) Descriptor() ([]byte, []int) {
	return file_pkg_sentry_seccheck_points_syscall_proto_rawDescGZIP(), []int{18}
}

func (x *Chroot) GetContextData() *ContextData {
	if x != nil {
		return x.ContextData
	}
	return nil
}

func (x *Chroot) GetExit() *Exit {
	if x != nil {
		return x.Exit
	}
	return nil
}

func (x *Chroot) GetSysno() uint64 {
	if x != nil {
		return x.Sysno
	}
	return 0
}

func (x *Chroot) GetPathname() string {
	if x != nil {
		return x.Pathname
	}
	return ""
}

type Eventfd struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ContextData   *ContextData           `protobuf:"bytes,1,opt,name=context_data,json=contextData,proto3" json:"context_data,omitempty"`
	Exit          *Exit                  `protobuf:"bytes,2,opt,name=exit,proto3" json:"exit,omitempty"`
	Sysno         uint64                 `protobuf:"varint,3,opt,name=sysno,proto3" json:"sysno,omitempty"`
	Val           int32                  `protobuf:"varint,4,opt,name=val,proto3" json:"val,omitempty"`
	Flags         uint32                 `protobuf:"varint,5,opt,name=flags,proto3" json:"flags,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Eventfd) Reset() {
	*x = Eventfd{}
	mi := &file_pkg_sentry_seccheck_points_syscall_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Eventfd) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Eventfd) ProtoMessage() {}

func (x *Eventfd) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_sentry_seccheck_points_syscall_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Eventfd.ProtoReflect.Descriptor instead.
func (*Eventfd) Descriptor() ([]byte, []int) {
	return file_pkg_sentry_seccheck_points_syscall_proto_rawDescGZIP(), []int{19}
}

func (x *Eventfd) GetContextData() *ContextData {
	if x != nil {
		return x.ContextData
	}
	return nil
}

func (x *Eventfd) GetExit() *Exit {
	if x != nil {
		return x.Exit
	}
	return nil
}

func (x *Eventfd) GetSysno() uint64 {
	if x != nil {
		return x.Sysno
	}
	return 0
}

func (x *Eventfd) GetVal() int32 {
	if x != nil {
		return x.Val
	}
	return 0
}

func (x *Eventfd) GetFlags() uint32 {
	if x != nil {
		return x.Flags
	}
	return 0
}

type Clone struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ContextData   *ContextData           `protobuf:"bytes,1,opt,name=context_data,json=contextData,proto3" json:"context_data,omitempty"`
	Exit          *Exit                  `protobuf:"bytes,2,opt,name=exit,proto3" json:"exit,omitempty"`
	Sysno         uint64                 `protobuf:"varint,3,opt,name=sysno,proto3" json:"sysno,omitempty"`
	Flags         uint64                 `protobuf:"varint,4,opt,name=flags,proto3" json:"flags,omitempty"`
	Stack         uint64                 `protobuf:"varint,5,opt,name=stack,proto3" json:"stack,omitempty"`
	NewTid        uint64                 `protobuf:"varint,6,opt,name=new_tid,json=newTid,proto3" json:"new_tid,omitempty"`
	Tls           uint64                 `protobuf:"varint,7,opt,name=tls,proto3" json:"tls,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Clone) Reset() {
	*x = Clone{}
	mi := &file_pkg_sentry_seccheck_points_syscall_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Clone) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Clone) ProtoMessage() {}

func (x *Clone) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_sentry_seccheck_points_syscall_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Clone.ProtoReflect.Descriptor instead.
func (*Clone) Descriptor() ([]byte, []int) {
	return file_pkg_sentry_seccheck_points_syscall_proto_rawDescGZIP(), []int{20}
}

func (x *Clone) GetContextData() *ContextData {
	if x != nil {
		return x.ContextData
	}
	return nil
}

func (x *Clone) GetExit() *Exit {
	if x != nil {
		return x.Exit
	}
	return nil
}

func (x *Clone) GetSysno() uint64 {
	if x != nil {
		return x.Sysno
	}
	return 0
}

func (x *Clone) GetFlags() uint64 {
	if x != nil {
		return x.Flags
	}
	return 0
}

func (x *Clone) GetStack() uint64 {
	if x != nil {
		return x.Stack
	}
	return 0
}

func (x *Clone) GetNewTid() uint64 {
	if x != nil {
		return x.NewTid
	}
	return 0
}

func (x *Clone) GetTls() uint64 {
	if x != nil {
		return x.Tls
	}
	return 0
}

type Bind struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ContextData   *ContextData           `protobuf:"bytes,1,opt,name=context_data,json=contextData,proto3" json:"context_data,omitempty"`
	Exit          *Exit                  `protobuf:"bytes,2,opt,name=exit,proto3" json:"exit,omitempty"`
	Sysno         uint64                 `protobuf:"varint,3,opt,name=sysno,proto3" json:"sysno,omitempty"`
	Fd            int32                  `protobuf:"varint,4,opt,name=fd,proto3" json:"fd,omitempty"`
	FdPath        string                 `protobuf:"bytes,5,opt,name=fd_path,json=fdPath,proto3" json:"fd_path,omitempty"`
	Address       []byte                 `protobuf:"bytes,6,opt,name=address,proto3" json:"address,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Bind) Reset() {
	*x = Bind{}
	mi := &file_pkg_sentry_seccheck_points_syscall_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Bind) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Bind) ProtoMessage() {}

func (x *Bind) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_sentry_seccheck_points_syscall_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Bind.ProtoReflect.Descriptor instead.
func (*Bind) Descriptor() ([]byte, []int) {
	return file_pkg_sentry_seccheck_points_syscall_proto_rawDescGZIP(), []int{21}
}

func (x *Bind) GetContextData() *ContextData {
	if x != nil {
		return x.ContextData
	}
	return nil
}

func (x *Bind) GetExit() *Exit {
	if x != nil {
		return x.Exit
	}
	return nil
}

func (x *Bind) GetSysno() uint64 {
	if x != nil {
		return x.Sysno
	}
	return 0
}

func (x *Bind) GetFd() int32 {
	if x != nil {
		return x.Fd
	}
	return 0
}

func (x *Bind) GetFdPath() string {
	if x != nil {
		return x.FdPath
	}
	return ""
}

func (x *Bind) GetAddress() []byte {
	if x != nil {
		return x.Address
	}
	return nil
}

type Accept struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ContextData   *ContextData           `protobuf:"bytes,1,opt,name=context_data,json=contextData,proto3" json:"context_data,omitempty"`
	Exit          *Exit                  `protobuf:"bytes,2,opt,name=exit,proto3" json:"exit,omitempty"`
	Sysno         uint64                 `protobuf:"varint,3,opt,name=sysno,proto3" json:"sysno,omitempty"`
	Fd            int32                  `protobuf:"varint,4,opt,name=fd,proto3" json:"fd,omitempty"`
	FdPath        string                 `protobuf:"bytes,5,opt,name=fd_path,json=fdPath,proto3" json:"fd_path,omitempty"`
	Address       []byte                 `protobuf:"bytes,6,opt,name=address,proto3" json:"address,omitempty"`
	Flags         int32                  `protobuf:"varint,7,opt,name=flags,proto3" json:"flags,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Accept) Reset() {
	*x = Accept{}
	mi := &file_pkg_sentry_seccheck_points_syscall_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Accept) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Accept) ProtoMessage() {}

func (x *Accept) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_sentry_seccheck_points_syscall_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Accept.ProtoReflect.Descriptor instead.
func (*Accept) Descriptor() ([]byte, []int) {
	return file_pkg_sentry_seccheck_points_syscall_proto_rawDescGZIP(), []int{22}
}

func (x *Accept) GetContextData() *ContextData {
	if x != nil {
		return x.ContextData
	}
	return nil
}

func (x *Accept) GetExit() *Exit {
	if x != nil {
		return x.Exit
	}
	return nil
}

func (x *Accept) GetSysno() uint64 {
	if x != nil {
		return x.Sysno
	}
	return 0
}

func (x *Accept) GetFd() int32 {
	if x != nil {
		return x.Fd
	}
	return 0
}

func (x *Accept) GetFdPath() string {
	if x != nil {
		return x.FdPath
	}
	return ""
}

func (x *Accept) GetAddress() []byte {
	if x != nil {
		return x.Address
	}
	return nil
}

func (x *Accept) GetFlags() int32 {
	if x != nil {
		return x.Flags
	}
	return 0
}

type TimerfdCreate struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ContextData   *ContextData           `protobuf:"bytes,1,opt,name=context_data,json=contextData,proto3" json:"context_data,omitempty"`
	Exit          *Exit                  `protobuf:"bytes,2,opt,name=exit,proto3" json:"exit,omitempty"`
	Sysno         uint64                 `protobuf:"varint,3,opt,name=sysno,proto3" json:"sysno,omitempty"`
	ClockId       int32                  `protobuf:"varint,4,opt,name=clock_id,json=clockId,proto3" json:"clock_id,omitempty"`
	Flags         int32                  `protobuf:"varint,5,opt,name=flags,proto3" json:"flags,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TimerfdCreate) Reset() {
	*x = TimerfdCreate{}
	mi := &file_pkg_sentry_seccheck_points_syscall_proto_msgTypes[23]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TimerfdCreate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TimerfdCreate) ProtoMessage() {}

func (x *TimerfdCreate) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_sentry_seccheck_points_syscall_proto_msgTypes[23]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TimerfdCreate.ProtoReflect.Descriptor instead.
func (*TimerfdCreate) Descriptor() ([]byte, []int) {
	return file_pkg_sentry_seccheck_points_syscall_proto_rawDescGZIP(), []int{23}
}

func (x *TimerfdCreate) GetContextData() *ContextData {
	if x != nil {
		return x.ContextData
	}
	return nil
}

func (x *TimerfdCreate) GetExit() *Exit {
	if x != nil {
		return x.Exit
	}
	return nil
}

func (x *TimerfdCreate) GetSysno() uint64 {
	if x != nil {
		return x.Sysno
	}
	return 0
}

func (x *TimerfdCreate) GetClockId() int32 {
	if x != nil {
		return x.ClockId
	}
	return 0
}

func (x *TimerfdCreate) GetFlags() int32 {
	if x != nil {
		return x.Flags
	}
	return 0
}

type Timespec struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Sec           int64                  `protobuf:"varint,1,opt,name=sec,proto3" json:"sec,omitempty"`
	Nsec          int64                  `protobuf:"varint,2,opt,name=nsec,proto3" json:"nsec,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Timespec) Reset() {
	*x = Timespec{}
	mi := &file_pkg_sentry_seccheck_points_syscall_proto_msgTypes[24]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Timespec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Timespec) ProtoMessage() {}

func (x *Timespec) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_sentry_seccheck_points_syscall_proto_msgTypes[24]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Timespec.ProtoReflect.Descriptor instead.
func (*Timespec) Descriptor() ([]byte, []int) {
	return file_pkg_sentry_seccheck_points_syscall_proto_rawDescGZIP(), []int{24}
}

func (x *Timespec) GetSec() int64 {
	if x != nil {
		return x.Sec
	}
	return 0
}

func (x *Timespec) GetNsec() int64 {
	if x != nil {
		return x.Nsec
	}
	return 0
}

type ItimerSpec struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Interval      *Timespec              `protobuf:"bytes,1,opt,name=interval,proto3" json:"interval,omitempty"`
	Value         *Timespec              `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ItimerSpec) Reset() {
	*x = ItimerSpec{}
	mi := &file_pkg_sentry_seccheck_points_syscall_proto_msgTypes[25]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ItimerSpec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ItimerSpec) ProtoMessage() {}

func (x *ItimerSpec) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_sentry_seccheck_points_syscall_proto_msgTypes[25]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ItimerSpec.ProtoReflect.Descriptor instead.
func (*ItimerSpec) Descriptor() ([]byte, []int) {
	return file_pkg_sentry_seccheck_points_syscall_proto_rawDescGZIP(), []int{25}
}

func (x *ItimerSpec) GetInterval() *Timespec {
	if x != nil {
		return x.Interval
	}
	return nil
}

func (x *ItimerSpec) GetValue() *Timespec {
	if x != nil {
		return x.Value
	}
	return nil
}

type TimerfdSetTime struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ContextData   *ContextData           `protobuf:"bytes,1,opt,name=context_data,json=contextData,proto3" json:"context_data,omitempty"`
	Exit          *Exit                  `protobuf:"bytes,2,opt,name=exit,proto3" json:"exit,omitempty"`
	Sysno         uint64                 `protobuf:"varint,3,opt,name=sysno,proto3" json:"sysno,omitempty"`
	Fd            int32                  `protobuf:"varint,4,opt,name=fd,proto3" json:"fd,omitempty"`
	FdPath        string                 `protobuf:"bytes,5,opt,name=fd_path,json=fdPath,proto3" json:"fd_path,omitempty"`
	Flags         int32                  `protobuf:"varint,6,opt,name=flags,proto3" json:"flags,omitempty"`
	NewValue      *ItimerSpec            `protobuf:"bytes,7,opt,name=new_value,json=newValue,proto3" json:"new_value,omitempty"`
	OldValue      *ItimerSpec            `protobuf:"bytes,8,opt,name=old_value,json=oldValue,proto3" json:"old_value,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TimerfdSetTime) Reset() {
	*x = TimerfdSetTime{}
	mi := &file_pkg_sentry_seccheck_points_syscall_proto_msgTypes[26]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TimerfdSetTime) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TimerfdSetTime) ProtoMessage() {}

func (x *TimerfdSetTime) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_sentry_seccheck_points_syscall_proto_msgTypes[26]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TimerfdSetTime.ProtoReflect.Descriptor instead.
func (*TimerfdSetTime) Descriptor() ([]byte, []int) {
	return file_pkg_sentry_seccheck_points_syscall_proto_rawDescGZIP(), []int{26}
}

func (x *TimerfdSetTime) GetContextData() *ContextData {
	if x != nil {
		return x.ContextData
	}
	return nil
}

func (x *TimerfdSetTime) GetExit() *Exit {
	if x != nil {
		return x.Exit
	}
	return nil
}

func (x *TimerfdSetTime) GetSysno() uint64 {
	if x != nil {
		return x.Sysno
	}
	return 0
}

func (x *TimerfdSetTime) GetFd() int32 {
	if x != nil {
		return x.Fd
	}
	return 0
}

func (x *TimerfdSetTime) GetFdPath() string {
	if x != nil {
		return x.FdPath
	}
	return ""
}

func (x *TimerfdSetTime) GetFlags() int32 {
	if x != nil {
		return x.Flags
	}
	return 0
}

func (x *TimerfdSetTime) GetNewValue() *ItimerSpec {
	if x != nil {
		return x.NewValue
	}
	return nil
}

func (x *TimerfdSetTime) GetOldValue() *ItimerSpec {
	if x != nil {
		return x.OldValue
	}
	return nil
}

type TimerfdGetTime struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ContextData   *ContextData           `protobuf:"bytes,1,opt,name=context_data,json=contextData,proto3" json:"context_data,omitempty"`
	Exit          *Exit                  `protobuf:"bytes,2,opt,name=exit,proto3" json:"exit,omitempty"`
	Sysno         uint64                 `protobuf:"varint,3,opt,name=sysno,proto3" json:"sysno,omitempty"`
	Fd            int32                  `protobuf:"varint,4,opt,name=fd,proto3" json:"fd,omitempty"`
	FdPath        string                 `protobuf:"bytes,5,opt,name=fd_path,json=fdPath,proto3" json:"fd_path,omitempty"`
	CurValue      *ItimerSpec            `protobuf:"bytes,6,opt,name=cur_value,json=curValue,proto3" json:"cur_value,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TimerfdGetTime) Reset() {
	*x = TimerfdGetTime{}
	mi := &file_pkg_sentry_seccheck_points_syscall_proto_msgTypes[27]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TimerfdGetTime) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TimerfdGetTime) ProtoMessage() {}

func (x *TimerfdGetTime) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_sentry_seccheck_points_syscall_proto_msgTypes[27]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TimerfdGetTime.ProtoReflect.Descriptor instead.
func (*TimerfdGetTime) Descriptor() ([]byte, []int) {
	return file_pkg_sentry_seccheck_points_syscall_proto_rawDescGZIP(), []int{27}
}

func (x *TimerfdGetTime) GetContextData() *ContextData {
	if x != nil {
		return x.ContextData
	}
	return nil
}

func (x *TimerfdGetTime) GetExit() *Exit {
	if x != nil {
		return x.Exit
	}
	return nil
}

func (x *TimerfdGetTime) GetSysno() uint64 {
	if x != nil {
		return x.Sysno
	}
	return 0
}

func (x *TimerfdGetTime) GetFd() int32 {
	if x != nil {
		return x.Fd
	}
	return 0
}

func (x *TimerfdGetTime) GetFdPath() string {
	if x != nil {
		return x.FdPath
	}
	return ""
}

func (x *TimerfdGetTime) GetCurValue() *ItimerSpec {
	if x != nil {
		return x.CurValue
	}
	return nil
}

type Fork struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ContextData   *ContextData           `protobuf:"bytes,1,opt,name=context_data,json=contextData,proto3" json:"context_data,omitempty"`
	Exit          *Exit                  `protobuf:"bytes,2,opt,name=exit,proto3" json:"exit,omitempty"`
	Sysno         uint64                 `protobuf:"varint,3,opt,name=sysno,proto3" json:"sysno,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Fork) Reset() {
	*x = Fork{}
	mi := &file_pkg_sentry_seccheck_points_syscall_proto_msgTypes[28]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Fork) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Fork) ProtoMessage() {}

func (x *Fork) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_sentry_seccheck_points_syscall_proto_msgTypes[28]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Fork.ProtoReflect.Descriptor instead.
func (*Fork) Descriptor() ([]byte, []int) {
	return file_pkg_sentry_seccheck_points_syscall_proto_rawDescGZIP(), []int{28}
}

func (x *Fork) GetContextData() *ContextData {
	if x != nil {
		return x.ContextData
	}
	return nil
}

func (x *Fork) GetExit() *Exit {
	if x != nil {
		return x.Exit
	}
	return nil
}

func (x *Fork) GetSysno() uint64 {
	if x != nil {
		return x.Sysno
	}
	return 0
}

type InotifyInit struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ContextData   *ContextData           `protobuf:"bytes,1,opt,name=context_data,json=contextData,proto3" json:"context_data,omitempty"`
	Exit          *Exit                  `protobuf:"bytes,2,opt,name=exit,proto3" json:"exit,omitempty"`
	Sysno         uint64                 `protobuf:"varint,3,opt,name=sysno,proto3" json:"sysno,omitempty"`
	Flags         int32                  `protobuf:"varint,4,opt,name=flags,proto3" json:"flags,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *InotifyInit) Reset() {
	*x = InotifyInit{}
	mi := &file_pkg_sentry_seccheck_points_syscall_proto_msgTypes[29]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *InotifyInit) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InotifyInit) ProtoMessage() {}

func (x *InotifyInit) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_sentry_seccheck_points_syscall_proto_msgTypes[29]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InotifyInit.ProtoReflect.Descriptor instead.
func (*InotifyInit) Descriptor() ([]byte, []int) {
	return file_pkg_sentry_seccheck_points_syscall_proto_rawDescGZIP(), []int{29}
}

func (x *InotifyInit) GetContextData() *ContextData {
	if x != nil {
		return x.ContextData
	}
	return nil
}

func (x *InotifyInit) GetExit() *Exit {
	if x != nil {
		return x.Exit
	}
	return nil
}

func (x *InotifyInit) GetSysno() uint64 {
	if x != nil {
		return x.Sysno
	}
	return 0
}

func (x *InotifyInit) GetFlags() int32 {
	if x != nil {
		return x.Flags
	}
	return 0
}

type InotifyAddWatch struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ContextData   *ContextData           `protobuf:"bytes,1,opt,name=context_data,json=contextData,proto3" json:"context_data,omitempty"`
	Exit          *Exit                  `protobuf:"bytes,2,opt,name=exit,proto3" json:"exit,omitempty"`
	Sysno         uint64                 `protobuf:"varint,3,opt,name=sysno,proto3" json:"sysno,omitempty"`
	Fd            int32                  `protobuf:"varint,4,opt,name=fd,proto3" json:"fd,omitempty"`
	FdPath        string                 `protobuf:"bytes,5,opt,name=fd_path,json=fdPath,proto3" json:"fd_path,omitempty"`
	Pathname      string                 `protobuf:"bytes,6,opt,name=pathname,proto3" json:"pathname,omitempty"`
	Mask          uint32                 `protobuf:"varint,7,opt,name=mask,proto3" json:"mask,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *InotifyAddWatch) Reset() {
	*x = InotifyAddWatch{}
	mi := &file_pkg_sentry_seccheck_points_syscall_proto_msgTypes[30]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *InotifyAddWatch) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InotifyAddWatch) ProtoMessage() {}

func (x *InotifyAddWatch) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_sentry_seccheck_points_syscall_proto_msgTypes[30]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InotifyAddWatch.ProtoReflect.Descriptor instead.
func (*InotifyAddWatch) Descriptor() ([]byte, []int) {
	return file_pkg_sentry_seccheck_points_syscall_proto_rawDescGZIP(), []int{30}
}

func (x *InotifyAddWatch) GetContextData() *ContextData {
	if x != nil {
		return x.ContextData
	}
	return nil
}

func (x *InotifyAddWatch) GetExit() *Exit {
	if x != nil {
		return x.Exit
	}
	return nil
}

func (x *InotifyAddWatch) GetSysno() uint64 {
	if x != nil {
		return x.Sysno
	}
	return 0
}

func (x *InotifyAddWatch) GetFd() int32 {
	if x != nil {
		return x.Fd
	}
	return 0
}

func (x *InotifyAddWatch) GetFdPath() string {
	if x != nil {
		return x.FdPath
	}
	return ""
}

func (x *InotifyAddWatch) GetPathname() string {
	if x != nil {
		return x.Pathname
	}
	return ""
}

func (x *InotifyAddWatch) GetMask() uint32 {
	if x != nil {
		return x.Mask
	}
	return 0
}

type InotifyRmWatch struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ContextData   *ContextData           `protobuf:"bytes,1,opt,name=context_data,json=contextData,proto3" json:"context_data,omitempty"`
	Exit          *Exit                  `protobuf:"bytes,2,opt,name=exit,proto3" json:"exit,omitempty"`
	Sysno         uint64                 `protobuf:"varint,3,opt,name=sysno,proto3" json:"sysno,omitempty"`
	Fd            int32                  `protobuf:"varint,4,opt,name=fd,proto3" json:"fd,omitempty"`
	FdPath        string                 `protobuf:"bytes,5,opt,name=fd_path,json=fdPath,proto3" json:"fd_path,omitempty"`
	Wd            int32                  `protobuf:"varint,6,opt,name=wd,proto3" json:"wd,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *InotifyRmWatch) Reset() {
	*x = InotifyRmWatch{}
	mi := &file_pkg_sentry_seccheck_points_syscall_proto_msgTypes[31]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *InotifyRmWatch) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InotifyRmWatch) ProtoMessage() {}

func (x *InotifyRmWatch) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_sentry_seccheck_points_syscall_proto_msgTypes[31]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InotifyRmWatch.ProtoReflect.Descriptor instead.
func (*InotifyRmWatch) Descriptor() ([]byte, []int) {
	return file_pkg_sentry_seccheck_points_syscall_proto_rawDescGZIP(), []int{31}
}

func (x *InotifyRmWatch) GetContextData() *ContextData {
	if x != nil {
		return x.ContextData
	}
	return nil
}

func (x *InotifyRmWatch) GetExit() *Exit {
	if x != nil {
		return x.Exit
	}
	return nil
}

func (x *InotifyRmWatch) GetSysno() uint64 {
	if x != nil {
		return x.Sysno
	}
	return 0
}

func (x *InotifyRmWatch) GetFd() int32 {
	if x != nil {
		return x.Fd
	}
	return 0
}

func (x *InotifyRmWatch) GetFdPath() string {
	if x != nil {
		return x.FdPath
	}
	return ""
}

func (x *InotifyRmWatch) GetWd() int32 {
	if x != nil {
		return x.Wd
	}
	return 0
}

type SocketPair struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ContextData   *ContextData           `protobuf:"bytes,1,opt,name=context_data,json=contextData,proto3" json:"context_data,omitempty"`
	Exit          *Exit                  `protobuf:"bytes,2,opt,name=exit,proto3" json:"exit,omitempty"`
	Sysno         uint64                 `protobuf:"varint,3,opt,name=sysno,proto3" json:"sysno,omitempty"`
	Domain        int32                  `protobuf:"varint,4,opt,name=domain,proto3" json:"domain,omitempty"`
	Type          int32                  `protobuf:"varint,5,opt,name=type,proto3" json:"type,omitempty"`
	Protocol      int32                  `protobuf:"varint,6,opt,name=protocol,proto3" json:"protocol,omitempty"`
	Socket1       int32                  `protobuf:"varint,7,opt,name=socket1,proto3" json:"socket1,omitempty"`
	Socket2       int32                  `protobuf:"varint,8,opt,name=socket2,proto3" json:"socket2,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SocketPair) Reset() {
	*x = SocketPair{}
	mi := &file_pkg_sentry_seccheck_points_syscall_proto_msgTypes[32]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SocketPair) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SocketPair) ProtoMessage() {}

func (x *SocketPair) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_sentry_seccheck_points_syscall_proto_msgTypes[32]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SocketPair.ProtoReflect.Descriptor instead.
func (*SocketPair) Descriptor() ([]byte, []int) {
	return file_pkg_sentry_seccheck_points_syscall_proto_rawDescGZIP(), []int{32}
}

func (x *SocketPair) GetContextData() *ContextData {
	if x != nil {
		return x.ContextData
	}
	return nil
}

func (x *SocketPair) GetExit() *Exit {
	if x != nil {
		return x.Exit
	}
	return nil
}

func (x *SocketPair) GetSysno() uint64 {
	if x != nil {
		return x.Sysno
	}
	return 0
}

func (x *SocketPair) GetDomain() int32 {
	if x != nil {
		return x.Domain
	}
	return 0
}

func (x *SocketPair) GetType() int32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *SocketPair) GetProtocol() int32 {
	if x != nil {
		return x.Protocol
	}
	return 0
}

func (x *SocketPair) GetSocket1() int32 {
	if x != nil {
		return x.Socket1
	}
	return 0
}

func (x *SocketPair) GetSocket2() int32 {
	if x != nil {
		return x.Socket2
	}
	return 0
}

var File_pkg_sentry_seccheck_points_syscall_proto protoreflect.FileDescriptor

const file_pkg_sentry_seccheck_points_syscall_proto_rawDesc = "" +
	"\n" +
	"(pkg/sentry/seccheck/points/syscall.proto\x12\x0egvisor.syscall\x1a'pkg/sentry/seccheck/points/common.proto\"8\n" +
	"\x04Exit\x12\x16\n" +
	"\x06result\x18\x01 \x01(\x03R\x06result\x12\x18\n" +
	"\aerrorno\x18\x02 \x01(\x03R\aerrorno\"\x80\x02\n" +
	"\aSyscall\x12=\n" +
	"\fcontext_data\x18\x01 \x01(\v2\x1a.gvisor.common.ContextDataR\vcontextData\x12(\n" +
	"\x04exit\x18\x02 \x01(\v2\x14.gvisor.syscall.ExitR\x04exit\x12\x14\n" +
	"\x05sysno\x18\x04 \x01(\x04R\x05sysno\x12\x12\n" +
	"\x04arg1\x18\x05 \x01(\x04R\x04arg1\x12\x12\n" +
	"\x04arg2\x18\x06 \x01(\x04R\x04arg2\x12\x12\n" +
	"\x04arg3\x18\a \x01(\x04R\x04arg3\x12\x12\n" +
	"\x04arg4\x18\b \x01(\x04R\x04arg4\x12\x12\n" +
	"\x04arg5\x18\t \x01(\x04R\x04arg5\x12\x12\n" +
	"\x04arg6\x18\n" +
	" \x01(\x04R\x04arg6\"\xf4\x01\n" +
	"\x04Open\x12=\n" +
	"\fcontext_data\x18\x01 \x01(\v2\x1a.gvisor.common.ContextDataR\vcontextData\x12(\n" +
	"\x04exit\x18\x02 \x01(\v2\x14.gvisor.syscall.ExitR\x04exit\x12\x14\n" +
	"\x05sysno\x18\x03 \x01(\x04R\x05sysno\x12\x0e\n" +
	"\x02fd\x18\x04 \x01(\x03R\x02fd\x12\x17\n" +
	"\afd_path\x18\x05 \x01(\tR\x06fdPath\x12\x1a\n" +
	"\bpathname\x18\x06 \x01(\tR\bpathname\x12\x14\n" +
	"\x05flags\x18\a \x01(\rR\x05flags\x12\x12\n" +
	"\x04mode\x18\b \x01(\rR\x04mode\"\xaf\x01\n" +
	"\x05Close\x12=\n" +
	"\fcontext_data\x18\x01 \x01(\v2\x1a.gvisor.common.ContextDataR\vcontextData\x12(\n" +
	"\x04exit\x18\x02 \x01(\v2\x14.gvisor.syscall.ExitR\x04exit\x12\x14\n" +
	"\x05sysno\x18\x03 \x01(\x04R\x05sysno\x12\x0e\n" +
	"\x02fd\x18\x04 \x01(\x03R\x02fd\x12\x17\n" +
	"\afd_path\x18\x05 \x01(\tR\x06fdPath\"\x91\x02\n" +
	"\x04Read\x12=\n" +
	"\fcontext_data\x18\x01 \x01(\v2\x1a.gvisor.common.ContextDataR\vcontextData\x12(\n" +
	"\x04exit\x18\x02 \x01(\v2\x14.gvisor.syscall.ExitR\x04exit\x12\x14\n" +
	"\x05sysno\x18\x03 \x01(\x04R\x05sysno\x12\x0e\n" +
	"\x02fd\x18\x04 \x01(\x03R\x02fd\x12\x17\n" +
	"\afd_path\x18\x05 \x01(\tR\x06fdPath\x12\x14\n" +
	"\x05count\x18\x06 \x01(\x04R\x05count\x12\x1d\n" +
	"\n" +
	"has_offset\x18\a \x01(\bR\thasOffset\x12\x16\n" +
	"\x06offset\x18\b \x01(\x03R\x06offset\x12\x14\n" +
	"\x05flags\x18\t \x01(\rR\x05flags\"\x92\x02\n" +
	"\x05Write\x12=\n" +
	"\fcontext_data\x18\x01 \x01(\v2\x1a.gvisor.common.ContextDataR\vcontextData\x12(\n" +
	"\x04exit\x18\x02 \x01(\v2\x14.gvisor.syscall.ExitR\x04exit\x12\x14\n" +
	"\x05sysno\x18\x03 \x01(\x04R\x05sysno\x12\x0e\n" +
	"\x02fd\x18\x04 \x01(\x03R\x02fd\x12\x17\n" +
	"\afd_path\x18\x05 \x01(\tR\x06fdPath\x12\x14\n" +
	"\x05count\x18\x06 \x01(\x04R\x05count\x12\x1d\n" +
	"\n" +
	"has_offset\x18\a \x01(\bR\thasOffset\x12\x16\n" +
	"\x06offset\x18\b \x01(\x03R\x06offset\x12\x14\n" +
	"\x05flags\x18\t \x01(\rR\x05flags\"\xcb\x01\n" +
	"\aConnect\x12=\n" +
	"\fcontext_data\x18\x01 \x01(\v2\x1a.gvisor.common.ContextDataR\vcontextData\x12(\n" +
	"\x04exit\x18\x02 \x01(\v2\x14.gvisor.syscall.ExitR\x04exit\x12\x14\n" +
	"\x05sysno\x18\x03 \x01(\x04R\x05sysno\x12\x0e\n" +
	"\x02fd\x18\x04 \x01(\x03R\x02fd\x12\x17\n" +
	"\afd_path\x18\x05 \x01(\tR\x06fdPath\x12\x18\n" +
	"\aaddress\x18\x06 \x01(\fR\aaddress\"\x8a\x02\n" +
	"\x06Execve\x12=\n" +
	"\fcontext_data\x18\x01 \x01(\v2\x1a.gvisor.common.ContextDataR\vcontextData\x12(\n" +
	"\x04exit\x18\x02 \x01(\v2\x14.gvisor.syscall.ExitR\x04exit\x12\x14\n" +
	"\x05sysno\x18\x03 \x01(\x04R\x05sysno\x12\x0e\n" +
	"\x02fd\x18\x04 \x01(\x03R\x02fd\x12\x17\n" +
	"\afd_path\x18\x05 \x01(\tR\x06fdPath\x12\x1a\n" +
	"\bpathname\x18\x06 \x01(\tR\bpathname\x12\x12\n" +
	"\x04argv\x18\a \x03(\tR\x04argv\x12\x12\n" +
	"\x04envv\x18\b \x03(\tR\x04envv\x12\x14\n" +
	"\x05flags\x18\t \x01(\rR\x05flags\"\xcf\x01\n" +
	"\x06Socket\x12=\n" +
	"\fcontext_data\x18\x01 \x01(\v2\x1a.gvisor.common.ContextDataR\vcontextData\x12(\n" +
	"\x04exit\x18\x02 \x01(\v2\x14.gvisor.syscall.ExitR\x04exit\x12\x14\n" +
	"\x05sysno\x18\x03 \x01(\x04R\x05sysno\x12\x16\n" +
	"\x06domain\x18\x04 \x01(\x05R\x06domain\x12\x12\n" +
	"\x04type\x18\x05 \x01(\x05R\x04type\x12\x1a\n" +
	"\bprotocol\x18\x06 \x01(\x05R\bprotocol\"\xcb\x01\n" +
	"\x05Chdir\x12=\n" +
	"\fcontext_data\x18\x01 \x01(\v2\x1a.gvisor.common.ContextDataR\vcontextData\x12(\n" +
	"\x04exit\x18\x02 \x01(\v2\x14.gvisor.syscall.ExitR\x04exit\x12\x14\n" +
	"\x05sysno\x18\x03 \x01(\x04R\x05sysno\x12\x0e\n" +
	"\x02fd\x18\x04 \x01(\x03R\x02fd\x12\x17\n" +
	"\afd_path\x18\x05 \x01(\tR\x06fdPath\x12\x1a\n" +
	"\bpathname\x18\x06 \x01(\tR\bpathname\"\xbf\x01\n" +
	"\bSetresid\x12=\n" +
	"\fcontext_data\x18\x01 \x01(\v2\x1a.gvisor.common.ContextDataR\vcontextData\x12(\n" +
	"\x04exit\x18\x02 \x01(\v2\x14.gvisor.syscall.ExitR\x04exit\x12\x14\n" +
	"\x05sysno\x18\x03 \x01(\x04R\x05sysno\x12\x10\n" +
	"\x03rid\x18\x04 \x01(\rR\x03rid\x12\x10\n" +
	"\x03eid\x18\x05 \x01(\rR\x03eid\x12\x10\n" +
	"\x03sid\x18\x06 \x01(\rR\x03sid\"\x96\x01\n" +
	"\x05Setid\x12=\n" +
	"\fcontext_data\x18\x01 \x01(\v2\x1a.gvisor.common.ContextDataR\vcontextData\x12(\n" +
	"\x04exit\x18\x02 \x01(\v2\x14.gvisor.syscall.ExitR\x04exit\x12\x14\n" +
	"\x05sysno\x18\x03 \x01(\x04R\x05sysno\x12\x0e\n" +
	"\x02id\x18\x04 \x01(\rR\x02id\"2\n" +
	"\fStructRlimit\x12\x10\n" +
	"\x03cur\x18\x01 \x01(\x04R\x03cur\x12\x10\n" +
	"\x03max\x18\x02 \x01(\x04R\x03max\"\xac\x02\n" +
	"\aPrlimit\x12=\n" +
	"\fcontext_data\x18\x01 \x01(\v2\x1a.gvisor.common.ContextDataR\vcontextData\x12(\n" +
	"\x04exit\x18\x02 \x01(\v2\x14.gvisor.syscall.ExitR\x04exit\x12\x14\n" +
	"\x05sysno\x18\x03 \x01(\x04R\x05sysno\x12\x10\n" +
	"\x03pid\x18\x04 \x01(\x05R\x03pid\x12\x1a\n" +
	"\bresource\x18\x05 \x01(\x03R\bresource\x129\n" +
	"\tnew_limit\x18\x06 \x01(\v2\x1c.gvisor.syscall.StructRlimitR\bnewLimit\x129\n" +
	"\told_limit\x18\a \x01(\v2\x1c.gvisor.syscall.StructRlimitR\boldLimit\"\xcb\x01\n" +
	"\x04Pipe\x12=\n" +
	"\fcontext_data\x18\x01 \x01(\v2\x1a.gvisor.common.ContextDataR\vcontextData\x12(\n" +
	"\x04exit\x18\x02 \x01(\v2\x14.gvisor.syscall.ExitR\x04exit\x12\x14\n" +
	"\x05sysno\x18\x03 \x01(\x04R\x05sysno\x12\x14\n" +
	"\x05flags\x18\x04 \x01(\rR\x05flags\x12\x16\n" +
	"\x06reader\x18\x05 \x01(\x05R\x06reader\x12\x16\n" +
	"\x06writer\x18\x06 \x01(\x05R\x06writer\"\xd5\x01\n" +
	"\x05Fcntl\x12=\n" +
	"\fcontext_data\x18\x01 \x01(\v2\x1a.gvisor.common.ContextDataR\vcontextData\x12(\n" +
	"\x04exit\x18\x02 \x01(\v2\x14.gvisor.syscall.ExitR\x04exit\x12\x14\n" +
	"\x05sysno\x18\x03 \x01(\x04R\x05sysno\x12\x0e\n" +
	"\x02fd\x18\x04 \x01(\x05R\x02fd\x12\x17\n" +
	"\afd_path\x18\x05 \x01(\tR\x06fdPath\x12\x10\n" +
	"\x03cmd\x18\x06 \x01(\x05R\x03cmd\x12\x12\n" +
	"\x04args\x18\a \x01(\x03R\x04args\"\xe1\x01\n" +
	"\x03Dup\x12=\n" +
	"\fcontext_data\x18\x01 \x01(\v2\x1a.gvisor.common.ContextDataR\vcontextData\x12(\n" +
	"\x04exit\x18\x02 \x01(\v2\x14.gvisor.syscall.ExitR\x04exit\x12\x14\n" +
	"\x05sysno\x18\x03 \x01(\x04R\x05sysno\x12\x15\n" +
	"\x06old_fd\x18\x04 \x01(\x05R\x05oldFd\x12\x15\n" +
	"\x06new_fd\x18\x05 \x01(\x05R\x05newFd\x12\x17\n" +
	"\afd_path\x18\x06 \x01(\tR\x06fdPath\x12\x14\n" +
	"\x05flags\x18\a \x01(\rR\x05flags\"\xe0\x01\n" +
	"\bSignalfd\x12=\n" +
	"\fcontext_data\x18\x01 \x01(\v2\x1a.gvisor.common.ContextDataR\vcontextData\x12(\n" +
	"\x04exit\x18\x02 \x01(\v2\x14.gvisor.syscall.ExitR\x04exit\x12\x14\n" +
	"\x05sysno\x18\x03 \x01(\x04R\x05sysno\x12\x0e\n" +
	"\x02fd\x18\x04 \x01(\x05R\x02fd\x12\x17\n" +
	"\afd_path\x18\x05 \x01(\tR\x06fdPath\x12\x16\n" +
	"\x06sigset\x18\x06 \x01(\x04R\x06sigset\x12\x14\n" +
	"\x05flags\x18\a \x01(\x05R\x05flags\"\xa3\x01\n" +
	"\x06Chroot\x12=\n" +
	"\fcontext_data\x18\x01 \x01(\v2\x1a.gvisor.common.ContextDataR\vcontextData\x12(\n" +
	"\x04exit\x18\x02 \x01(\v2\x14.gvisor.syscall.ExitR\x04exit\x12\x14\n" +
	"\x05sysno\x18\x03 \x01(\x04R\x05sysno\x12\x1a\n" +
	"\bpathname\x18\x04 \x01(\tR\bpathname\"\xb0\x01\n" +
	"\aEventfd\x12=\n" +
	"\fcontext_data\x18\x01 \x01(\v2\x1a.gvisor.common.ContextDataR\vcontextData\x12(\n" +
	"\x04exit\x18\x02 \x01(\v2\x14.gvisor.syscall.ExitR\x04exit\x12\x14\n" +
	"\x05sysno\x18\x03 \x01(\x04R\x05sysno\x12\x10\n" +
	"\x03val\x18\x04 \x01(\x05R\x03val\x12\x14\n" +
	"\x05flags\x18\x05 \x01(\rR\x05flags\"\xdd\x01\n" +
	"\x05Clone\x12=\n" +
	"\fcontext_data\x18\x01 \x01(\v2\x1a.gvisor.common.ContextDataR\vcontextData\x12(\n" +
	"\x04exit\x18\x02 \x01(\v2\x14.gvisor.syscall.ExitR\x04exit\x12\x14\n" +
	"\x05sysno\x18\x03 \x01(\x04R\x05sysno\x12\x14\n" +
	"\x05flags\x18\x04 \x01(\x04R\x05flags\x12\x14\n" +
	"\x05stack\x18\x05 \x01(\x04R\x05stack\x12\x17\n" +
	"\anew_tid\x18\x06 \x01(\x04R\x06newTid\x12\x10\n" +
	"\x03tls\x18\a \x01(\x04R\x03tls\"\xc8\x01\n" +
	"\x04Bind\x12=\n" +
	"\fcontext_data\x18\x01 \x01(\v2\x1a.gvisor.common.ContextDataR\vcontextData\x12(\n" +
	"\x04exit\x18\x02 \x01(\v2\x14.gvisor.syscall.ExitR\x04exit\x12\x14\n" +
	"\x05sysno\x18\x03 \x01(\x04R\x05sysno\x12\x0e\n" +
	"\x02fd\x18\x04 \x01(\x05R\x02fd\x12\x17\n" +
	"\afd_path\x18\x05 \x01(\tR\x06fdPath\x12\x18\n" +
	"\aaddress\x18\x06 \x01(\fR\aaddress\"\xe0\x01\n" +
	"\x06Accept\x12=\n" +
	"\fcontext_data\x18\x01 \x01(\v2\x1a.gvisor.common.ContextDataR\vcontextData\x12(\n" +
	"\x04exit\x18\x02 \x01(\v2\x14.gvisor.syscall.ExitR\x04exit\x12\x14\n" +
	"\x05sysno\x18\x03 \x01(\x04R\x05sysno\x12\x0e\n" +
	"\x02fd\x18\x04 \x01(\x05R\x02fd\x12\x17\n" +
	"\afd_path\x18\x05 \x01(\tR\x06fdPath\x12\x18\n" +
	"\aaddress\x18\x06 \x01(\fR\aaddress\x12\x14\n" +
	"\x05flags\x18\a \x01(\x05R\x05flags\"\xbf\x01\n" +
	"\rTimerfdCreate\x12=\n" +
	"\fcontext_data\x18\x01 \x01(\v2\x1a.gvisor.common.ContextDataR\vcontextData\x12(\n" +
	"\x04exit\x18\x02 \x01(\v2\x14.gvisor.syscall.ExitR\x04exit\x12\x14\n" +
	"\x05sysno\x18\x03 \x01(\x04R\x05sysno\x12\x19\n" +
	"\bclock_id\x18\x04 \x01(\x05R\aclockId\x12\x14\n" +
	"\x05flags\x18\x05 \x01(\x05R\x05flags\"0\n" +
	"\bTimespec\x12\x10\n" +
	"\x03sec\x18\x01 \x01(\x03R\x03sec\x12\x12\n" +
	"\x04nsec\x18\x02 \x01(\x03R\x04nsec\"r\n" +
	"\n" +
	"ItimerSpec\x124\n" +
	"\binterval\x18\x01 \x01(\v2\x18.gvisor.syscall.TimespecR\binterval\x12.\n" +
	"\x05value\x18\x02 \x01(\v2\x18.gvisor.syscall.TimespecR\x05value\"\xc0\x02\n" +
	"\x0eTimerfdSetTime\x12=\n" +
	"\fcontext_data\x18\x01 \x01(\v2\x1a.gvisor.common.ContextDataR\vcontextData\x12(\n" +
	"\x04exit\x18\x02 \x01(\v2\x14.gvisor.syscall.ExitR\x04exit\x12\x14\n" +
	"\x05sysno\x18\x03 \x01(\x04R\x05sysno\x12\x0e\n" +
	"\x02fd\x18\x04 \x01(\x05R\x02fd\x12\x17\n" +
	"\afd_path\x18\x05 \x01(\tR\x06fdPath\x12\x14\n" +
	"\x05flags\x18\x06 \x01(\x05R\x05flags\x127\n" +
	"\tnew_value\x18\a \x01(\v2\x1a.gvisor.syscall.ItimerSpecR\bnewValue\x127\n" +
	"\told_value\x18\b \x01(\v2\x1a.gvisor.syscall.ItimerSpecR\boldValue\"\xf1\x01\n" +
	"\x0eTimerfdGetTime\x12=\n" +
	"\fcontext_data\x18\x01 \x01(\v2\x1a.gvisor.common.ContextDataR\vcontextData\x12(\n" +
	"\x04exit\x18\x02 \x01(\v2\x14.gvisor.syscall.ExitR\x04exit\x12\x14\n" +
	"\x05sysno\x18\x03 \x01(\x04R\x05sysno\x12\x0e\n" +
	"\x02fd\x18\x04 \x01(\x05R\x02fd\x12\x17\n" +
	"\afd_path\x18\x05 \x01(\tR\x06fdPath\x127\n" +
	"\tcur_value\x18\x06 \x01(\v2\x1a.gvisor.syscall.ItimerSpecR\bcurValue\"\x85\x01\n" +
	"\x04Fork\x12=\n" +
	"\fcontext_data\x18\x01 \x01(\v2\x1a.gvisor.common.ContextDataR\vcontextData\x12(\n" +
	"\x04exit\x18\x02 \x01(\v2\x14.gvisor.syscall.ExitR\x04exit\x12\x14\n" +
	"\x05sysno\x18\x03 \x01(\x04R\x05sysno\"\xa2\x01\n" +
	"\vInotifyInit\x12=\n" +
	"\fcontext_data\x18\x01 \x01(\v2\x1a.gvisor.common.ContextDataR\vcontextData\x12(\n" +
	"\x04exit\x18\x02 \x01(\v2\x14.gvisor.syscall.ExitR\x04exit\x12\x14\n" +
	"\x05sysno\x18\x03 \x01(\x04R\x05sysno\x12\x14\n" +
	"\x05flags\x18\x04 \x01(\x05R\x05flags\"\xe9\x01\n" +
	"\x0fInotifyAddWatch\x12=\n" +
	"\fcontext_data\x18\x01 \x01(\v2\x1a.gvisor.common.ContextDataR\vcontextData\x12(\n" +
	"\x04exit\x18\x02 \x01(\v2\x14.gvisor.syscall.ExitR\x04exit\x12\x14\n" +
	"\x05sysno\x18\x03 \x01(\x04R\x05sysno\x12\x0e\n" +
	"\x02fd\x18\x04 \x01(\x05R\x02fd\x12\x17\n" +
	"\afd_path\x18\x05 \x01(\tR\x06fdPath\x12\x1a\n" +
	"\bpathname\x18\x06 \x01(\tR\bpathname\x12\x12\n" +
	"\x04mask\x18\a \x01(\rR\x04mask\"\xc8\x01\n" +
	"\x0eInotifyRmWatch\x12=\n" +
	"\fcontext_data\x18\x01 \x01(\v2\x1a.gvisor.common.ContextDataR\vcontextData\x12(\n" +
	"\x04exit\x18\x02 \x01(\v2\x14.gvisor.syscall.ExitR\x04exit\x12\x14\n" +
	"\x05sysno\x18\x03 \x01(\x04R\x05sysno\x12\x0e\n" +
	"\x02fd\x18\x04 \x01(\x05R\x02fd\x12\x17\n" +
	"\afd_path\x18\x05 \x01(\tR\x06fdPath\x12\x0e\n" +
	"\x02wd\x18\x06 \x01(\x05R\x02wd\"\x87\x02\n" +
	"\n" +
	"SocketPair\x12=\n" +
	"\fcontext_data\x18\x01 \x01(\v2\x1a.gvisor.common.ContextDataR\vcontextData\x12(\n" +
	"\x04exit\x18\x02 \x01(\v2\x14.gvisor.syscall.ExitR\x04exit\x12\x14\n" +
	"\x05sysno\x18\x03 \x01(\x04R\x05sysno\x12\x16\n" +
	"\x06domain\x18\x04 \x01(\x05R\x06domain\x12\x12\n" +
	"\x04type\x18\x05 \x01(\x05R\x04type\x12\x1a\n" +
	"\bprotocol\x18\x06 \x01(\x05R\bprotocol\x12\x18\n" +
	"\asocket1\x18\a \x01(\x05R\asocket1\x12\x18\n" +
	"\asocket2\x18\b \x01(\x05R\asocket2b\x06proto3"

var (
	file_pkg_sentry_seccheck_points_syscall_proto_rawDescOnce sync.Once
	file_pkg_sentry_seccheck_points_syscall_proto_rawDescData []byte
)

func file_pkg_sentry_seccheck_points_syscall_proto_rawDescGZIP() []byte {
	file_pkg_sentry_seccheck_points_syscall_proto_rawDescOnce.Do(func() {
		file_pkg_sentry_seccheck_points_syscall_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_pkg_sentry_seccheck_points_syscall_proto_rawDesc), len(file_pkg_sentry_seccheck_points_syscall_proto_rawDesc)))
	})
	return file_pkg_sentry_seccheck_points_syscall_proto_rawDescData
}

var file_pkg_sentry_seccheck_points_syscall_proto_msgTypes = make([]protoimpl.MessageInfo, 33)
var file_pkg_sentry_seccheck_points_syscall_proto_goTypes = []any{
	(*Exit)(nil),            // 0: gvisor.syscall.Exit
	(*Syscall)(nil),         // 1: gvisor.syscall.Syscall
	(*Open)(nil),            // 2: gvisor.syscall.Open
	(*Close)(nil),           // 3: gvisor.syscall.Close
	(*Read)(nil),            // 4: gvisor.syscall.Read
	(*Write)(nil),           // 5: gvisor.syscall.Write
	(*Connect)(nil),         // 6: gvisor.syscall.Connect
	(*Execve)(nil),          // 7: gvisor.syscall.Execve
	(*Socket)(nil),          // 8: gvisor.syscall.Socket
	(*Chdir)(nil),           // 9: gvisor.syscall.Chdir
	(*Setresid)(nil),        // 10: gvisor.syscall.Setresid
	(*Setid)(nil),           // 11: gvisor.syscall.Setid
	(*StructRlimit)(nil),    // 12: gvisor.syscall.StructRlimit
	(*Prlimit)(nil),         // 13: gvisor.syscall.Prlimit
	(*Pipe)(nil),            // 14: gvisor.syscall.Pipe
	(*Fcntl)(nil),           // 15: gvisor.syscall.Fcntl
	(*Dup)(nil),             // 16: gvisor.syscall.Dup
	(*Signalfd)(nil),        // 17: gvisor.syscall.Signalfd
	(*Chroot)(nil),          // 18: gvisor.syscall.Chroot
	(*Eventfd)(nil),         // 19: gvisor.syscall.Eventfd
	(*Clone)(nil),           // 20: gvisor.syscall.Clone
	(*Bind)(nil),            // 21: gvisor.syscall.Bind
	(*Accept)(nil),          // 22: gvisor.syscall.Accept
	(*TimerfdCreate)(nil),   // 23: gvisor.syscall.TimerfdCreate
	(*Timespec)(nil),        // 24: gvisor.syscall.Timespec
	(*ItimerSpec)(nil),      // 25: gvisor.syscall.ItimerSpec
	(*TimerfdSetTime)(nil),  // 26: gvisor.syscall.TimerfdSetTime
	(*TimerfdGetTime)(nil),  // 27: gvisor.syscall.TimerfdGetTime
	(*Fork)(nil),            // 28: gvisor.syscall.Fork
	(*InotifyInit)(nil),     // 29: gvisor.syscall.InotifyInit
	(*InotifyAddWatch)(nil), // 30: gvisor.syscall.InotifyAddWatch
	(*InotifyRmWatch)(nil),  // 31: gvisor.syscall.InotifyRmWatch
	(*SocketPair)(nil),      // 32: gvisor.syscall.SocketPair
	(*ContextData)(nil),     // 33: gvisor.common.ContextData
}
var file_pkg_sentry_seccheck_points_syscall_proto_depIdxs = []int32{
	33, // 0: gvisor.syscall.Syscall.context_data:type_name -> gvisor.common.ContextData
	0,  // 1: gvisor.syscall.Syscall.exit:type_name -> gvisor.syscall.Exit
	33, // 2: gvisor.syscall.Open.context_data:type_name -> gvisor.common.ContextData
	0,  // 3: gvisor.syscall.Open.exit:type_name -> gvisor.syscall.Exit
	33, // 4: gvisor.syscall.Close.context_data:type_name -> gvisor.common.ContextData
	0,  // 5: gvisor.syscall.Close.exit:type_name -> gvisor.syscall.Exit
	33, // 6: gvisor.syscall.Read.context_data:type_name -> gvisor.common.ContextData
	0,  // 7: gvisor.syscall.Read.exit:type_name -> gvisor.syscall.Exit
	33, // 8: gvisor.syscall.Write.context_data:type_name -> gvisor.common.ContextData
	0,  // 9: gvisor.syscall.Write.exit:type_name -> gvisor.syscall.Exit
	33, // 10: gvisor.syscall.Connect.context_data:type_name -> gvisor.common.ContextData
	0,  // 11: gvisor.syscall.Connect.exit:type_name -> gvisor.syscall.Exit
	33, // 12: gvisor.syscall.Execve.context_data:type_name -> gvisor.common.ContextData
	0,  // 13: gvisor.syscall.Execve.exit:type_name -> gvisor.syscall.Exit
	33, // 14: gvisor.syscall.Socket.context_data:type_name -> gvisor.common.ContextData
	0,  // 15: gvisor.syscall.Socket.exit:type_name -> gvisor.syscall.Exit
	33, // 16: gvisor.syscall.Chdir.context_data:type_name -> gvisor.common.ContextData
	0,  // 17: gvisor.syscall.Chdir.exit:type_name -> gvisor.syscall.Exit
	33, // 18: gvisor.syscall.Setresid.context_data:type_name -> gvisor.common.ContextData
	0,  // 19: gvisor.syscall.Setresid.exit:type_name -> gvisor.syscall.Exit
	33, // 20: gvisor.syscall.Setid.context_data:type_name -> gvisor.common.ContextData
	0,  // 21: gvisor.syscall.Setid.exit:type_name -> gvisor.syscall.Exit
	33, // 22: gvisor.syscall.Prlimit.context_data:type_name -> gvisor.common.ContextData
	0,  // 23: gvisor.syscall.Prlimit.exit:type_name -> gvisor.syscall.Exit
	12, // 24: gvisor.syscall.Prlimit.new_limit:type_name -> gvisor.syscall.StructRlimit
	12, // 25: gvisor.syscall.Prlimit.old_limit:type_name -> gvisor.syscall.StructRlimit
	33, // 26: gvisor.syscall.Pipe.context_data:type_name -> gvisor.common.ContextData
	0,  // 27: gvisor.syscall.Pipe.exit:type_name -> gvisor.syscall.Exit
	33, // 28: gvisor.syscall.Fcntl.context_data:type_name -> gvisor.common.ContextData
	0,  // 29: gvisor.syscall.Fcntl.exit:type_name -> gvisor.syscall.Exit
	33, // 30: gvisor.syscall.Dup.context_data:type_name -> gvisor.common.ContextData
	0,  // 31: gvisor.syscall.Dup.exit:type_name -> gvisor.syscall.Exit
	33, // 32: gvisor.syscall.Signalfd.context_data:type_name -> gvisor.common.ContextData
	0,  // 33: gvisor.syscall.Signalfd.exit:type_name -> gvisor.syscall.Exit
	33, // 34: gvisor.syscall.Chroot.context_data:type_name -> gvisor.common.ContextData
	0,  // 35: gvisor.syscall.Chroot.exit:type_name -> gvisor.syscall.Exit
	33, // 36: gvisor.syscall.Eventfd.context_data:type_name -> gvisor.common.ContextData
	0,  // 37: gvisor.syscall.Eventfd.exit:type_name -> gvisor.syscall.Exit
	33, // 38: gvisor.syscall.Clone.context_data:type_name -> gvisor.common.ContextData
	0,  // 39: gvisor.syscall.Clone.exit:type_name -> gvisor.syscall.Exit
	33, // 40: gvisor.syscall.Bind.context_data:type_name -> gvisor.common.ContextData
	0,  // 41: gvisor.syscall.Bind.exit:type_name -> gvisor.syscall.Exit
	33, // 42: gvisor.syscall.Accept.context_data:type_name -> gvisor.common.ContextData
	0,  // 43: gvisor.syscall.Accept.exit:type_name -> gvisor.syscall.Exit
	33, // 44: gvisor.syscall.TimerfdCreate.context_data:type_name -> gvisor.common.ContextData
	0,  // 45: gvisor.syscall.TimerfdCreate.exit:type_name -> gvisor.syscall.Exit
	24, // 46: gvisor.syscall.ItimerSpec.interval:type_name -> gvisor.syscall.Timespec
	24, // 47: gvisor.syscall.ItimerSpec.value:type_name -> gvisor.syscall.Timespec
	33, // 48: gvisor.syscall.TimerfdSetTime.context_data:type_name -> gvisor.common.ContextData
	0,  // 49: gvisor.syscall.TimerfdSetTime.exit:type_name -> gvisor.syscall.Exit
	25, // 50: gvisor.syscall.TimerfdSetTime.new_value:type_name -> gvisor.syscall.ItimerSpec
	25, // 51: gvisor.syscall.TimerfdSetTime.old_value:type_name -> gvisor.syscall.ItimerSpec
	33, // 52: gvisor.syscall.TimerfdGetTime.context_data:type_name -> gvisor.common.ContextData
	0,  // 53: gvisor.syscall.TimerfdGetTime.exit:type_name -> gvisor.syscall.Exit
	25, // 54: gvisor.syscall.TimerfdGetTime.cur_value:type_name -> gvisor.syscall.ItimerSpec
	33, // 55: gvisor.syscall.Fork.context_data:type_name -> gvisor.common.ContextData
	0,  // 56: gvisor.syscall.Fork.exit:type_name -> gvisor.syscall.Exit
	33, // 57: gvisor.syscall.InotifyInit.context_data:type_name -> gvisor.common.ContextData
	0,  // 58: gvisor.syscall.InotifyInit.exit:type_name -> gvisor.syscall.Exit
	33, // 59: gvisor.syscall.InotifyAddWatch.context_data:type_name -> gvisor.common.ContextData
	0,  // 60: gvisor.syscall.InotifyAddWatch.exit:type_name -> gvisor.syscall.Exit
	33, // 61: gvisor.syscall.InotifyRmWatch.context_data:type_name -> gvisor.common.ContextData
	0,  // 62: gvisor.syscall.InotifyRmWatch.exit:type_name -> gvisor.syscall.Exit
	33, // 63: gvisor.syscall.SocketPair.context_data:type_name -> gvisor.common.ContextData
	0,  // 64: gvisor.syscall.SocketPair.exit:type_name -> gvisor.syscall.Exit
	65, // [65:65] is the sub-list for method output_type
	65, // [65:65] is the sub-list for method input_type
	65, // [65:65] is the sub-list for extension type_name
	65, // [65:65] is the sub-list for extension extendee
	0,  // [0:65] is the sub-list for field type_name
}

func init() { file_pkg_sentry_seccheck_points_syscall_proto_init() }
func file_pkg_sentry_seccheck_points_syscall_proto_init() {
	if File_pkg_sentry_seccheck_points_syscall_proto != nil {
		return
	}
	file_pkg_sentry_seccheck_points_common_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_pkg_sentry_seccheck_points_syscall_proto_rawDesc), len(file_pkg_sentry_seccheck_points_syscall_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   33,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_pkg_sentry_seccheck_points_syscall_proto_goTypes,
		DependencyIndexes: file_pkg_sentry_seccheck_points_syscall_proto_depIdxs,
		MessageInfos:      file_pkg_sentry_seccheck_points_syscall_proto_msgTypes,
	}.Build()
	File_pkg_sentry_seccheck_points_syscall_proto = out.File
	file_pkg_sentry_seccheck_points_syscall_proto_goTypes = nil
	file_pkg_sentry_seccheck_points_syscall_proto_depIdxs = nil
}
