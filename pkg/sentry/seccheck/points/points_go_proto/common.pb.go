// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.8
// 	protoc        v6.31.1
// source: pkg/sentry/seccheck/points/common.proto

package points_go_proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type MessageType int32

const (
	MessageType_MESSAGE_UNKNOWN                   MessageType = 0
	MessageType_MESSAGE_CONTAINER_START           MessageType = 1
	MessageType_MESSAGE_SENTRY_CLONE              MessageType = 2
	MessageType_MESSAGE_SENTRY_EXEC               MessageType = 3
	MessageType_MESSAGE_SENTRY_EXIT_NOTIFY_PARENT MessageType = 4
	MessageType_MESSAGE_SENTRY_TASK_EXIT          MessageType = 5
	MessageType_MESSAGE_SYSCALL_RAW               MessageType = 6
	MessageType_MESSAGE_SYSCALL_OPEN              MessageType = 7
	MessageType_MESSAGE_SYSCALL_CLOSE             MessageType = 8
	MessageType_MESSAGE_SYSCALL_READ              MessageType = 9
	MessageType_MESSAGE_SYSCALL_CONNECT           MessageType = 10
	MessageType_MESSAGE_SYSCALL_EXECVE            MessageType = 11
	MessageType_MESSAGE_SYSCALL_SOCKET            MessageType = 12
	MessageType_MESSAGE_SYSCALL_CHDIR             MessageType = 13
	MessageType_MESSAGE_SYSCALL_SETID             MessageType = 14
	MessageType_MESSAGE_SYSCALL_SETRESID          MessageType = 15
	MessageType_MESSAGE_SYSCALL_PRLIMIT64         MessageType = 16
	MessageType_MESSAGE_SYSCALL_PIPE              MessageType = 17
	MessageType_MESSAGE_SYSCALL_FCNTL             MessageType = 18
	MessageType_MESSAGE_SYSCALL_DUP               MessageType = 19
	MessageType_MESSAGE_SYSCALL_SIGNALFD          MessageType = 20
	MessageType_MESSAGE_SYSCALL_CHROOT            MessageType = 21
	MessageType_MESSAGE_SYSCALL_EVENTFD           MessageType = 22
	MessageType_MESSAGE_SYSCALL_CLONE             MessageType = 23
	MessageType_MESSAGE_SYSCALL_BIND              MessageType = 24
	MessageType_MESSAGE_SYSCALL_ACCEPT            MessageType = 25
	MessageType_MESSAGE_SYSCALL_TIMERFD_CREATE    MessageType = 26
	MessageType_MESSAGE_SYSCALL_TIMERFD_SETTIME   MessageType = 27
	MessageType_MESSAGE_SYSCALL_TIMERFD_GETTIME   MessageType = 28
	MessageType_MESSAGE_SYSCALL_FORK              MessageType = 29
	MessageType_MESSAGE_SYSCALL_INOTIFY_INIT      MessageType = 30
	MessageType_MESSAGE_SYSCALL_INOTIFY_ADD_WATCH MessageType = 31
	MessageType_MESSAGE_SYSCALL_INOTIFY_RM_WATCH  MessageType = 32
	MessageType_MESSAGE_SYSCALL_SOCKETPAIR        MessageType = 33
	MessageType_MESSAGE_SYSCALL_WRITE             MessageType = 34
)

// Enum value maps for MessageType.
var (
	MessageType_name = map[int32]string{
		0:  "MESSAGE_UNKNOWN",
		1:  "MESSAGE_CONTAINER_START",
		2:  "MESSAGE_SENTRY_CLONE",
		3:  "MESSAGE_SENTRY_EXEC",
		4:  "MESSAGE_SENTRY_EXIT_NOTIFY_PARENT",
		5:  "MESSAGE_SENTRY_TASK_EXIT",
		6:  "MESSAGE_SYSCALL_RAW",
		7:  "MESSAGE_SYSCALL_OPEN",
		8:  "MESSAGE_SYSCALL_CLOSE",
		9:  "MESSAGE_SYSCALL_READ",
		10: "MESSAGE_SYSCALL_CONNECT",
		11: "MESSAGE_SYSCALL_EXECVE",
		12: "MESSAGE_SYSCALL_SOCKET",
		13: "MESSAGE_SYSCALL_CHDIR",
		14: "MESSAGE_SYSCALL_SETID",
		15: "MESSAGE_SYSCALL_SETRESID",
		16: "MESSAGE_SYSCALL_PRLIMIT64",
		17: "MESSAGE_SYSCALL_PIPE",
		18: "MESSAGE_SYSCALL_FCNTL",
		19: "MESSAGE_SYSCALL_DUP",
		20: "MESSAGE_SYSCALL_SIGNALFD",
		21: "MESSAGE_SYSCALL_CHROOT",
		22: "MESSAGE_SYSCALL_EVENTFD",
		23: "MESSAGE_SYSCALL_CLONE",
		24: "MESSAGE_SYSCALL_BIND",
		25: "MESSAGE_SYSCALL_ACCEPT",
		26: "MESSAGE_SYSCALL_TIMERFD_CREATE",
		27: "MESSAGE_SYSCALL_TIMERFD_SETTIME",
		28: "MESSAGE_SYSCALL_TIMERFD_GETTIME",
		29: "MESSAGE_SYSCALL_FORK",
		30: "MESSAGE_SYSCALL_INOTIFY_INIT",
		31: "MESSAGE_SYSCALL_INOTIFY_ADD_WATCH",
		32: "MESSAGE_SYSCALL_INOTIFY_RM_WATCH",
		33: "MESSAGE_SYSCALL_SOCKETPAIR",
		34: "MESSAGE_SYSCALL_WRITE",
	}
	MessageType_value = map[string]int32{
		"MESSAGE_UNKNOWN":                   0,
		"MESSAGE_CONTAINER_START":           1,
		"MESSAGE_SENTRY_CLONE":              2,
		"MESSAGE_SENTRY_EXEC":               3,
		"MESSAGE_SENTRY_EXIT_NOTIFY_PARENT": 4,
		"MESSAGE_SENTRY_TASK_EXIT":          5,
		"MESSAGE_SYSCALL_RAW":               6,
		"MESSAGE_SYSCALL_OPEN":              7,
		"MESSAGE_SYSCALL_CLOSE":             8,
		"MESSAGE_SYSCALL_READ":              9,
		"MESSAGE_SYSCALL_CONNECT":           10,
		"MESSAGE_SYSCALL_EXECVE":            11,
		"MESSAGE_SYSCALL_SOCKET":            12,
		"MESSAGE_SYSCALL_CHDIR":             13,
		"MESSAGE_SYSCALL_SETID":             14,
		"MESSAGE_SYSCALL_SETRESID":          15,
		"MESSAGE_SYSCALL_PRLIMIT64":         16,
		"MESSAGE_SYSCALL_PIPE":              17,
		"MESSAGE_SYSCALL_FCNTL":             18,
		"MESSAGE_SYSCALL_DUP":               19,
		"MESSAGE_SYSCALL_SIGNALFD":          20,
		"MESSAGE_SYSCALL_CHROOT":            21,
		"MESSAGE_SYSCALL_EVENTFD":           22,
		"MESSAGE_SYSCALL_CLONE":             23,
		"MESSAGE_SYSCALL_BIND":              24,
		"MESSAGE_SYSCALL_ACCEPT":            25,
		"MESSAGE_SYSCALL_TIMERFD_CREATE":    26,
		"MESSAGE_SYSCALL_TIMERFD_SETTIME":   27,
		"MESSAGE_SYSCALL_TIMERFD_GETTIME":   28,
		"MESSAGE_SYSCALL_FORK":              29,
		"MESSAGE_SYSCALL_INOTIFY_INIT":      30,
		"MESSAGE_SYSCALL_INOTIFY_ADD_WATCH": 31,
		"MESSAGE_SYSCALL_INOTIFY_RM_WATCH":  32,
		"MESSAGE_SYSCALL_SOCKETPAIR":        33,
		"MESSAGE_SYSCALL_WRITE":             34,
	}
)

func (x MessageType) Enum() *MessageType {
	p := new(MessageType)
	*p = x
	return p
}

func (x MessageType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (MessageType) Descriptor() protoreflect.EnumDescriptor {
	return file_pkg_sentry_seccheck_points_common_proto_enumTypes[0].Descriptor()
}

func (MessageType) Type() protoreflect.EnumType {
	return &file_pkg_sentry_seccheck_points_common_proto_enumTypes[0]
}

func (x MessageType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use MessageType.Descriptor instead.
func (MessageType) EnumDescriptor() ([]byte, []int) {
	return file_pkg_sentry_seccheck_points_common_proto_rawDescGZIP(), []int{0}
}

type Handshake struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Version       uint32                 `protobuf:"varint,1,opt,name=version,proto3" json:"version,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Handshake) Reset() {
	*x = Handshake{}
	mi := &file_pkg_sentry_seccheck_points_common_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Handshake) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Handshake) ProtoMessage() {}

func (x *Handshake) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_sentry_seccheck_points_common_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Handshake.ProtoReflect.Descriptor instead.
func (*Handshake) Descriptor() ([]byte, []int) {
	return file_pkg_sentry_seccheck_points_common_proto_rawDescGZIP(), []int{0}
}

func (x *Handshake) GetVersion() uint32 {
	if x != nil {
		return x.Version
	}
	return 0
}

type Credentials struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	RealUid       uint32                 `protobuf:"varint,1,opt,name=real_uid,json=realUid,proto3" json:"real_uid,omitempty"`
	EffectiveUid  uint32                 `protobuf:"varint,2,opt,name=effective_uid,json=effectiveUid,proto3" json:"effective_uid,omitempty"`
	SavedUid      uint32                 `protobuf:"varint,3,opt,name=saved_uid,json=savedUid,proto3" json:"saved_uid,omitempty"`
	RealGid       uint32                 `protobuf:"varint,4,opt,name=real_gid,json=realGid,proto3" json:"real_gid,omitempty"`
	EffectiveGid  uint32                 `protobuf:"varint,5,opt,name=effective_gid,json=effectiveGid,proto3" json:"effective_gid,omitempty"`
	SavedGid      uint32                 `protobuf:"varint,6,opt,name=saved_gid,json=savedGid,proto3" json:"saved_gid,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Credentials) Reset() {
	*x = Credentials{}
	mi := &file_pkg_sentry_seccheck_points_common_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Credentials) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Credentials) ProtoMessage() {}

func (x *Credentials) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_sentry_seccheck_points_common_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Credentials.ProtoReflect.Descriptor instead.
func (*Credentials) Descriptor() ([]byte, []int) {
	return file_pkg_sentry_seccheck_points_common_proto_rawDescGZIP(), []int{1}
}

func (x *Credentials) GetRealUid() uint32 {
	if x != nil {
		return x.RealUid
	}
	return 0
}

func (x *Credentials) GetEffectiveUid() uint32 {
	if x != nil {
		return x.EffectiveUid
	}
	return 0
}

func (x *Credentials) GetSavedUid() uint32 {
	if x != nil {
		return x.SavedUid
	}
	return 0
}

func (x *Credentials) GetRealGid() uint32 {
	if x != nil {
		return x.RealGid
	}
	return 0
}

func (x *Credentials) GetEffectiveGid() uint32 {
	if x != nil {
		return x.EffectiveGid
	}
	return 0
}

func (x *Credentials) GetSavedGid() uint32 {
	if x != nil {
		return x.SavedGid
	}
	return 0
}

type ContextData struct {
	state                  protoimpl.MessageState `protogen:"open.v1"`
	TimeNs                 int64                  `protobuf:"varint,1,opt,name=time_ns,json=timeNs,proto3" json:"time_ns,omitempty"`
	ThreadId               int32                  `protobuf:"varint,2,opt,name=thread_id,json=threadId,proto3" json:"thread_id,omitempty"`
	ThreadStartTimeNs      int64                  `protobuf:"varint,3,opt,name=thread_start_time_ns,json=threadStartTimeNs,proto3" json:"thread_start_time_ns,omitempty"`
	ThreadGroupId          int32                  `protobuf:"varint,4,opt,name=thread_group_id,json=threadGroupId,proto3" json:"thread_group_id,omitempty"`
	ThreadGroupStartTimeNs int64                  `protobuf:"varint,5,opt,name=thread_group_start_time_ns,json=threadGroupStartTimeNs,proto3" json:"thread_group_start_time_ns,omitempty"`
	ContainerId            string                 `protobuf:"bytes,6,opt,name=container_id,json=containerId,proto3" json:"container_id,omitempty"`
	Credentials            *Credentials           `protobuf:"bytes,7,opt,name=credentials,proto3" json:"credentials,omitempty"`
	Cwd                    string                 `protobuf:"bytes,8,opt,name=cwd,proto3" json:"cwd,omitempty"`
	ProcessName            string                 `protobuf:"bytes,9,opt,name=process_name,json=processName,proto3" json:"process_name,omitempty"`
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *ContextData) Reset() {
	*x = ContextData{}
	mi := &file_pkg_sentry_seccheck_points_common_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ContextData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ContextData) ProtoMessage() {}

func (x *ContextData) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_sentry_seccheck_points_common_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ContextData.ProtoReflect.Descriptor instead.
func (*ContextData) Descriptor() ([]byte, []int) {
	return file_pkg_sentry_seccheck_points_common_proto_rawDescGZIP(), []int{2}
}

func (x *ContextData) GetTimeNs() int64 {
	if x != nil {
		return x.TimeNs
	}
	return 0
}

func (x *ContextData) GetThreadId() int32 {
	if x != nil {
		return x.ThreadId
	}
	return 0
}

func (x *ContextData) GetThreadStartTimeNs() int64 {
	if x != nil {
		return x.ThreadStartTimeNs
	}
	return 0
}

func (x *ContextData) GetThreadGroupId() int32 {
	if x != nil {
		return x.ThreadGroupId
	}
	return 0
}

func (x *ContextData) GetThreadGroupStartTimeNs() int64 {
	if x != nil {
		return x.ThreadGroupStartTimeNs
	}
	return 0
}

func (x *ContextData) GetContainerId() string {
	if x != nil {
		return x.ContainerId
	}
	return ""
}

func (x *ContextData) GetCredentials() *Credentials {
	if x != nil {
		return x.Credentials
	}
	return nil
}

func (x *ContextData) GetCwd() string {
	if x != nil {
		return x.Cwd
	}
	return ""
}

func (x *ContextData) GetProcessName() string {
	if x != nil {
		return x.ProcessName
	}
	return ""
}

var File_pkg_sentry_seccheck_points_common_proto protoreflect.FileDescriptor

const file_pkg_sentry_seccheck_points_common_proto_rawDesc = "" +
	"\n" +
	"'pkg/sentry/seccheck/points/common.proto\x12\rgvisor.common\"%\n" +
	"\tHandshake\x12\x18\n" +
	"\aversion\x18\x01 \x01(\rR\aversion\"\xc7\x01\n" +
	"\vCredentials\x12\x19\n" +
	"\breal_uid\x18\x01 \x01(\rR\arealUid\x12#\n" +
	"\reffective_uid\x18\x02 \x01(\rR\feffectiveUid\x12\x1b\n" +
	"\tsaved_uid\x18\x03 \x01(\rR\bsavedUid\x12\x19\n" +
	"\breal_gid\x18\x04 \x01(\rR\arealGid\x12#\n" +
	"\reffective_gid\x18\x05 \x01(\rR\feffectiveGid\x12\x1b\n" +
	"\tsaved_gid\x18\x06 \x01(\rR\bsavedGid\"\xee\x02\n" +
	"\vContextData\x12\x17\n" +
	"\atime_ns\x18\x01 \x01(\x03R\x06timeNs\x12\x1b\n" +
	"\tthread_id\x18\x02 \x01(\x05R\bthreadId\x12/\n" +
	"\x14thread_start_time_ns\x18\x03 \x01(\x03R\x11threadStartTimeNs\x12&\n" +
	"\x0fthread_group_id\x18\x04 \x01(\x05R\rthreadGroupId\x12:\n" +
	"\x1athread_group_start_time_ns\x18\x05 \x01(\x03R\x16threadGroupStartTimeNs\x12!\n" +
	"\fcontainer_id\x18\x06 \x01(\tR\vcontainerId\x12<\n" +
	"\vcredentials\x18\a \x01(\v2\x1a.gvisor.common.CredentialsR\vcredentials\x12\x10\n" +
	"\x03cwd\x18\b \x01(\tR\x03cwd\x12!\n" +
	"\fprocess_name\x18\t \x01(\tR\vprocessName*\x8f\b\n" +
	"\vMessageType\x12\x13\n" +
	"\x0fMESSAGE_UNKNOWN\x10\x00\x12\x1b\n" +
	"\x17MESSAGE_CONTAINER_START\x10\x01\x12\x18\n" +
	"\x14MESSAGE_SENTRY_CLONE\x10\x02\x12\x17\n" +
	"\x13MESSAGE_SENTRY_EXEC\x10\x03\x12%\n" +
	"!MESSAGE_SENTRY_EXIT_NOTIFY_PARENT\x10\x04\x12\x1c\n" +
	"\x18MESSAGE_SENTRY_TASK_EXIT\x10\x05\x12\x17\n" +
	"\x13MESSAGE_SYSCALL_RAW\x10\x06\x12\x18\n" +
	"\x14MESSAGE_SYSCALL_OPEN\x10\a\x12\x19\n" +
	"\x15MESSAGE_SYSCALL_CLOSE\x10\b\x12\x18\n" +
	"\x14MESSAGE_SYSCALL_READ\x10\t\x12\x1b\n" +
	"\x17MESSAGE_SYSCALL_CONNECT\x10\n" +
	"\x12\x1a\n" +
	"\x16MESSAGE_SYSCALL_EXECVE\x10\v\x12\x1a\n" +
	"\x16MESSAGE_SYSCALL_SOCKET\x10\f\x12\x19\n" +
	"\x15MESSAGE_SYSCALL_CHDIR\x10\r\x12\x19\n" +
	"\x15MESSAGE_SYSCALL_SETID\x10\x0e\x12\x1c\n" +
	"\x18MESSAGE_SYSCALL_SETRESID\x10\x0f\x12\x1d\n" +
	"\x19MESSAGE_SYSCALL_PRLIMIT64\x10\x10\x12\x18\n" +
	"\x14MESSAGE_SYSCALL_PIPE\x10\x11\x12\x19\n" +
	"\x15MESSAGE_SYSCALL_FCNTL\x10\x12\x12\x17\n" +
	"\x13MESSAGE_SYSCALL_DUP\x10\x13\x12\x1c\n" +
	"\x18MESSAGE_SYSCALL_SIGNALFD\x10\x14\x12\x1a\n" +
	"\x16MESSAGE_SYSCALL_CHROOT\x10\x15\x12\x1b\n" +
	"\x17MESSAGE_SYSCALL_EVENTFD\x10\x16\x12\x19\n" +
	"\x15MESSAGE_SYSCALL_CLONE\x10\x17\x12\x18\n" +
	"\x14MESSAGE_SYSCALL_BIND\x10\x18\x12\x1a\n" +
	"\x16MESSAGE_SYSCALL_ACCEPT\x10\x19\x12\"\n" +
	"\x1eMESSAGE_SYSCALL_TIMERFD_CREATE\x10\x1a\x12#\n" +
	"\x1fMESSAGE_SYSCALL_TIMERFD_SETTIME\x10\x1b\x12#\n" +
	"\x1fMESSAGE_SYSCALL_TIMERFD_GETTIME\x10\x1c\x12\x18\n" +
	"\x14MESSAGE_SYSCALL_FORK\x10\x1d\x12 \n" +
	"\x1cMESSAGE_SYSCALL_INOTIFY_INIT\x10\x1e\x12%\n" +
	"!MESSAGE_SYSCALL_INOTIFY_ADD_WATCH\x10\x1f\x12$\n" +
	" MESSAGE_SYSCALL_INOTIFY_RM_WATCH\x10 \x12\x1e\n" +
	"\x1aMESSAGE_SYSCALL_SOCKETPAIR\x10!\x12\x19\n" +
	"\x15MESSAGE_SYSCALL_WRITE\x10\"b\x06proto3"

var (
	file_pkg_sentry_seccheck_points_common_proto_rawDescOnce sync.Once
	file_pkg_sentry_seccheck_points_common_proto_rawDescData []byte
)

func file_pkg_sentry_seccheck_points_common_proto_rawDescGZIP() []byte {
	file_pkg_sentry_seccheck_points_common_proto_rawDescOnce.Do(func() {
		file_pkg_sentry_seccheck_points_common_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_pkg_sentry_seccheck_points_common_proto_rawDesc), len(file_pkg_sentry_seccheck_points_common_proto_rawDesc)))
	})
	return file_pkg_sentry_seccheck_points_common_proto_rawDescData
}

var file_pkg_sentry_seccheck_points_common_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_pkg_sentry_seccheck_points_common_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_pkg_sentry_seccheck_points_common_proto_goTypes = []any{
	(MessageType)(0),    // 0: gvisor.common.MessageType
	(*Handshake)(nil),   // 1: gvisor.common.Handshake
	(*Credentials)(nil), // 2: gvisor.common.Credentials
	(*ContextData)(nil), // 3: gvisor.common.ContextData
}
var file_pkg_sentry_seccheck_points_common_proto_depIdxs = []int32{
	2, // 0: gvisor.common.ContextData.credentials:type_name -> gvisor.common.Credentials
	1, // [1:1] is the sub-list for method output_type
	1, // [1:1] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_pkg_sentry_seccheck_points_common_proto_init() }
func file_pkg_sentry_seccheck_points_common_proto_init() {
	if File_pkg_sentry_seccheck_points_common_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_pkg_sentry_seccheck_points_common_proto_rawDesc), len(file_pkg_sentry_seccheck_points_common_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_pkg_sentry_seccheck_points_common_proto_goTypes,
		DependencyIndexes: file_pkg_sentry_seccheck_points_common_proto_depIdxs,
		EnumInfos:         file_pkg_sentry_seccheck_points_common_proto_enumTypes,
		MessageInfos:      file_pkg_sentry_seccheck_points_common_proto_msgTypes,
	}.Build()
	File_pkg_sentry_seccheck_points_common_proto = out.File
	file_pkg_sentry_seccheck_points_common_proto_goTypes = nil
	file_pkg_sentry_seccheck_points_common_proto_depIdxs = nil
}
