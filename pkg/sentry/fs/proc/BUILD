load("//tools:defs.bzl", "go_library", "go_test")

package(licenses = ["notice"])

go_library(
    name = "proc",
    srcs = [
        "cgroup.go",
        "cpuinfo.go",
        "exec_args.go",
        "fds.go",
        "filesystems.go",
        "fs.go",
        "inode.go",
        "loadavg.go",
        "meminfo.go",
        "mounts.go",
        "net.go",
        "proc.go",
        "stat.go",
        "sys.go",
        "sys_net.go",
        "sys_net_state.go",
        "task.go",
        "uid_gid_map.go",
        "uptime.go",
        "version.go",
    ],
    visibility = ["//pkg/sentry:internal"],
    deps = [
        "//pkg/abi/linux",
        "//pkg/context",
        "//pkg/log",
        "//pkg/sentry/fs",
        "//pkg/sentry/fs/fsutil",
        "//pkg/sentry/fs/proc/device",
        "//pkg/sentry/fs/proc/seqfile",
        "//pkg/sentry/fs/ramfs",
        "//pkg/sentry/fsbridge",
        "//pkg/sentry/inet",
        "//pkg/sentry/kernel",
        "//pkg/sentry/kernel/auth",
        "//pkg/sentry/kernel/time",
        "//pkg/sentry/limits",
        "//pkg/sentry/mm",
        "//pkg/sentry/socket",
        "//pkg/sentry/socket/unix",
        "//pkg/sentry/socket/unix/transport",
        "//pkg/sentry/usage",
        "//pkg/sync",
        "//pkg/syserror",
        "//pkg/tcpip/header",
        "//pkg/usermem",
        "//pkg/waiter",
    ],
)

go_test(
    name = "proc_test",
    size = "small",
    srcs = [
        "net_test.go",
        "sys_net_test.go",
    ],
    library = ":proc",
    deps = [
        "//pkg/abi/linux",
        "//pkg/context",
        "//pkg/sentry/inet",
        "//pkg/usermem",
    ],
)
