load("//tools:defs.bzl", "go_library", "go_test")

package(licenses = ["notice"])

go_library(
    name = "gofer",
    srcs = [
        "attr.go",
        "cache_policy.go",
        "context_file.go",
        "device.go",
        "fifo.go",
        "file.go",
        "file_state.go",
        "fs.go",
        "handles.go",
        "inode.go",
        "inode_state.go",
        "path.go",
        "session.go",
        "session_state.go",
        "socket.go",
        "util.go",
    ],
    visibility = ["//pkg/sentry:internal"],
    deps = [
        "//pkg/abi/linux",
        "//pkg/context",
        "//pkg/fd",
        "//pkg/log",
        "//pkg/metric",
        "//pkg/p9",
        "//pkg/refs",
        "//pkg/safemem",
        "//pkg/secio",
        "//pkg/sentry/device",
        "//pkg/sentry/fs",
        "//pkg/sentry/fs/fdpipe",
        "//pkg/sentry/fs/fsutil",
        "//pkg/sentry/fs/host",
        "//pkg/sentry/kernel/auth",
        "//pkg/sentry/kernel/pipe",
        "//pkg/sentry/kernel/time",
        "//pkg/sentry/memmap",
        "//pkg/sentry/socket/unix/transport",
        "//pkg/sync",
        "//pkg/syserr",
        "//pkg/syserror",
        "//pkg/unet",
        "//pkg/usermem",
        "//pkg/waiter",
    ],
)

go_test(
    name = "gofer_test",
    size = "small",
    srcs = ["gofer_test.go"],
    library = ":gofer",
    deps = [
        "//pkg/context",
        "//pkg/p9",
        "//pkg/p9/p9test",
        "//pkg/sentry/contexttest",
        "//pkg/sentry/fs",
    ],
)
