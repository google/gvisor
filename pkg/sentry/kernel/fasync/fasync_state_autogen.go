// automatically generated by stateify.

package fasync

import (
	"gvisor.dev/gvisor/pkg/state"
)

func (x *FileAsync) beforeSave() {}
func (x *FileAsync) save(m state.Map) {
	x.beforeSave()
	m.Save("e", &x.e)
	m.Save("requester", &x.requester)
	m.Save("registered", &x.registered)
	m.Save("recipientPG", &x.recipientPG)
	m.Save("recipientTG", &x.recipientTG)
	m.Save("recipientT", &x.recipientT)
}

func (x *FileAsync) afterLoad() {}
func (x *FileAsync) load(m state.Map) {
	m.Load("e", &x.e)
	m.Load("requester", &x.requester)
	m.Load("registered", &x.registered)
	m.Load("recipientPG", &x.recipientPG)
	m.Load("recipientTG", &x.recipientTG)
	m.Load("recipientT", &x.recipientT)
}

func init() {
	state.Register("pkg/sentry/kernel/fasync.FileAsync", (*FileAsync)(nil), state.Fns{Save: (*FileAsync).save, Load: (*FileAsync).load})
}
