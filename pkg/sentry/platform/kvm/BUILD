load("//tools/go_stateify:defs.bzl", "go_library")
load("@io_bazel_rules_go//go:def.bzl", "go_test")

package(licenses = ["notice"])

go_library(
    name = "kvm",
    srcs = [
        "address_space.go",
        "allocator.go",
        "bluepill.go",
        "bluepill_amd64.go",
        "bluepill_amd64.s",
        "bluepill_amd64_unsafe.go",
        "bluepill_arm64.go",
        "bluepill_arm64.s",
        "bluepill_arm64_unsafe.go",
        "bluepill_fault.go",
        "bluepill_unsafe.go",
        "context.go",
        "filters_amd64.go",
        "filters_arm64.go",
        "kvm.go",
        "kvm_amd64.go",
        "kvm_amd64_unsafe.go",
        "kvm_arm64.go",
        "kvm_arm64_unsafe.go",
        "kvm_const.go",
        "kvm_const_arm64.go",
        "machine.go",
        "machine_amd64.go",
        "machine_amd64_unsafe.go",
        "machine_arm64.go",
        "machine_arm64_unsafe.go",
        "machine_unsafe.go",
        "physical_map.go",
        "virtual_map.go",
    ],
    importpath = "gvisor.dev/gvisor/pkg/sentry/platform/kvm",
    visibility = ["//pkg/sentry:internal"],
    deps = [
        "//pkg/abi/linux",
        "//pkg/atomicbitops",
        "//pkg/cpuid",
        "//pkg/log",
        "//pkg/procid",
        "//pkg/seccomp",
        "//pkg/sentry/arch",
        "//pkg/sentry/platform",
        "//pkg/sentry/platform/interrupt",
        "//pkg/sentry/platform/ring0",
        "//pkg/sentry/platform/ring0/pagetables",
        "//pkg/sentry/platform/safecopy",
        "//pkg/sentry/time",
        "//pkg/sentry/usermem",
    ],
)

go_test(
    name = "kvm_test",
    srcs = [
        "kvm_test.go",
        "virtual_map_test.go",
    ],
    embed = [":kvm"],
    tags = [
        "manual",
        "nogotsan",
        "requires-kvm",
    ],
    deps = [
        "//pkg/sentry/arch",
        "//pkg/sentry/platform",
        "//pkg/sentry/platform/kvm/testutil",
        "//pkg/sentry/platform/ring0",
        "//pkg/sentry/platform/ring0/pagetables",
        "//pkg/sentry/usermem",
    ],
)
