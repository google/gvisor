// automatically generated by stateify.

package header

import (
	"gvisor.dev/gvisor/pkg/state"
)

func (x *SACKBlock) beforeSave() {}
func (x *SACKBlock) save(m state.Map) {
	x.beforeSave()
	m.Save("Start", &x.Start)
	m.Save("End", &x.End)
}

func (x *SACKBlock) afterLoad() {}
func (x *SACKBlock) load(m state.Map) {
	m.Load("Start", &x.Start)
	m.Load("End", &x.End)
}

func (x *TCPOptions) beforeSave() {}
func (x *TCPOptions) save(m state.Map) {
	x.beforeSave()
	m.Save("TS", &x.TS)
	m.Save("TSVal", &x.TSVal)
	m.Save("TSEcr", &x.TSEcr)
	m.Save("SACKBlocks", &x.SACKBlocks)
}

func (x *TCPOptions) afterLoad() {}
func (x *TCPOptions) load(m state.Map) {
	m.Load("TS", &x.TS)
	m.Load("TSVal", &x.TSVal)
	m.Load("TSEcr", &x.TSEcr)
	m.Load("SACKBlocks", &x.SACKBlocks)
}

func init() {
	state.Register("pkg/tcpip/header.SACKBlock", (*SACKBlock)(nil), state.Fns{Save: (*SACKBlock).save, Load: (*SACKBlock).load})
	state.Register("pkg/tcpip/header.TCPOptions", (*TCPOptions)(nil), state.Fns{Save: (*TCPOptions).save, Load: (*TCPOptions).load})
}
