agents:
  queue: release
_templates:
  common: &common
    timeout_in_minutes: 180
    retry:
      automatic:
        - exit_status: -1
          limit: 10
        - exit_status: "*"
          limit: 2

notify:
  - email: "gvisor-eng+buildkite@google.com"
    if: build.state == "failed"

env:
  # Force a clean checkout every time to avoid reuse of files between runs.
  BUILDKITE_CLEAN_CHECKOUT: true

steps:
  - <<: *common
    label: ":ship: Push all images (x86_64)"
    commands:
      - make ARCH=x86_64 push-all-images
    agents:
      arch: "amd64"
  - <<: *common
    label: ":ship: Push all images (aarch64)"
    if: build.branch == "master" && build.tag == null
    commands:
      - make ARCH=aarch64 push-all-images
    agents:
      arch: "arm64"
  - <<: *common
    label: ":ship: Release"
    if: build.branch == "master" || build.tag != null
    commands:
      - make BAZEL_OPTIONS=--config=x86_64 artifacts/x86_64
      - make BAZEL_OPTIONS=--config=aarch64 artifacts/aarch64
      - make release RELEASE_NIGHTLY=$$RELEASE_NIGHTLY
      - cd repo && gsutil cp -r . gs://gvisor/releases/
  - <<: *common
    label: ":ship: Website Deploy"
    if: build.branch == "master" && build.tag == null
    commands:
      # The built website image must be x86_64.
      - make BAZEL_OPTIONS=--config=x86_64 website-deploy
  - <<: *common
    label: ":female_supervillain: COS GPU Tests"
    commands:
      - make cos-gpu-all-tests RUNTIME_ARGS="--strace --debug"
    agents:
      queue: cos-canary-gpu
  - <<: *common
    label: ":screwdriver: GPU Tests"
    commands:
      - make sudo TARGETS=//tools/gpu:main ARGS="install --latest" || cat /var/log/nvidia-installer.log
      - make gpu-all-tests RUNTIME_ARGS="--strace --debug"
    agents:
      queue: gpu
  - <<: *common
    label: ":screwdriver: All GPU Drivers Test"
    commands:
      - tools/gpu/all_drivers_test.sh
    agents:
      queue: gpu
